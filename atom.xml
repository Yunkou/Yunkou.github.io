<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>🍺寇老师的小站🍺</title>
  
  <subtitle>📝记录成长的点点滴滴📸</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-28T07:28:35.645Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yunkou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>烧菜学习记录纪录📝</title>
    <link href="http://yoursite.com/2019/04/21/%E7%83%A7%E8%8F%9C%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%E7%BA%AA%E5%BD%95%F0%9F%93%9D/"/>
    <id>http://yoursite.com/2019/04/21/烧菜学习记录纪录📝/</id>
    <published>2019-04-21T02:48:22.000Z</published>
    <updated>2019-10-28T07:28:35.645Z</updated>
    
    <content type="html"><![CDATA[<p>远程工作以后，吃成了最大的问题，实在吃腻了外面餐馆的饭 🍚，索性自己学做菜，已下记录了自己能稳定输出的菜</p><ol><li>油焖大虾</li><li>辣子鸡丁</li><li>八宝粥</li><li>拍黄瓜</li><li>蒜黄炒鸡蛋</li><li>打卤面（蒜薹鸡蛋火腿卤）</li><li>疙瘩汤</li><li>手撕包菜</li><li>干锅有机花菜</li><li>焖锅（鸡腿肉、胡萝卜、土豆）</li><li>辣炒小河虾</li><li>煎带鱼</li><li>肉丁炸黄豆酱（小菜）</li><li>西红柿炒鸡蛋</li><li>小米南瓜粥</li><li>榨菜肉丝</li><li>辣炒花蛤</li><li>炒胡萝卜（四川豆瓣酱炒）</li><li>酱爆豇豆角 (北方豆瓣酱、鸡蛋)</li></ol><p>待开发中…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;远程工作以后，吃成了最大的问题，实在吃腻了外面餐馆的饭 🍚，索性自己学做菜，已下记录了自己能稳定输出的菜&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;油焖大虾&lt;/li&gt;
&lt;li&gt;辣子鸡丁&lt;/li&gt;
&lt;li&gt;八宝粥&lt;/li&gt;
&lt;li&gt;拍黄瓜&lt;/li&gt;
&lt;li&gt;蒜黄炒鸡蛋&lt;/li&gt;
&lt;li&gt;打
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>极客时间学习记录</title>
    <link href="http://yoursite.com/2019/04/21/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2019/04/21/极客时间学习记录/</id>
    <published>2019-04-21T02:36:46.000Z</published>
    <updated>2019-10-28T07:28:35.645Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下自己在极客时间的学习记录</p><ol><li>【2019-04-21】「玩转Git三剑客」</li><li>【2019-04-21】「玩转VS Code」</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录一下自己在极客时间的学习记录&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;【2019-04-21】「玩转Git三剑客」&lt;/li&gt;
&lt;li&gt;【2019-04-21】「玩转VS Code」&lt;/li&gt;
&lt;/ol&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Egghead学习记录📝</title>
    <link href="http://yoursite.com/2019/04/15/Egghead%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%F0%9F%93%9D/"/>
    <id>http://yoursite.com/2019/04/15/Egghead学习记录📝/</id>
    <published>2019-04-15T07:19:33.000Z</published>
    <updated>2019-10-28T07:28:35.643Z</updated>
    
    <content type="html"><![CDATA[<ol><li>[2019年04月15日] Create Amazing Animations with GreenSock</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;[2019年04月15日] Create Amazing Animations with GreenSock&lt;/li&gt;
&lt;/ol&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>2019阅读计划</title>
    <link href="http://yoursite.com/2019/02/13/2019%E9%98%85%E8%AF%BB%E8%AE%A1%E5%88%92/"/>
    <id>http://yoursite.com/2019/02/13/2019阅读计划/</id>
    <published>2019-02-13T15:49:20.000Z</published>
    <updated>2019-11-21T13:13:33.113Z</updated>
    
    <content type="html"><![CDATA[<img src="https://ws3.sinaimg.cn/large/006tNc79ly1g058fydjphj30p00anwmg.jpg" /><p>2019 年书单</p><a id="more"></a><ol><li>《在线》</li><li>《民国了》</li><li>《薛兆丰的经济学讲义》</li><li>《小岛经济学》</li><li>《重新发现日本》</li><li>《Google 工作整理术》</li><li>《人民的名义》</li><li>《生命不息，折腾不止》</li><li>《好好学习》</li><li>《这就是 OKR》</li><li>《流浪地球》</li><li>《苏东坡传》</li><li>《半小时漫画理财课》</li><li>《OKR 工作法》</li><li>《干法》</li><li>《心流：最优体验心理学》</li><li>《就活一次，拼尽全力》</li><li>《习惯的力量》</li><li>《番茄工作法图解》</li><li>《单核工作法图解》</li><li>《考拉小巫的留学成长日记》</li><li>《男人来自火星，女人来自金星》</li><li>《每天演好一个情绪稳定的成年人》</li><li>《我们仨》</li><li>《LOVE IS》</li><li>《在耶鲁精进》</li><li>《当我谈跑步时，我谈些什么》</li><li>《典藏:经典世界名画高清图集》</li><li>《重来2》</li><li>《持续行动》</li><li>《习近平的七年知青岁月》</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://ws3.sinaimg.cn/large/006tNc79ly1g058fydjphj30p00anwmg.jpg&quot; /&gt;

&lt;p&gt;2019 年书单&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="阅读" scheme="http://yoursite.com/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>遇山开路遇河架桥</title>
    <link href="http://yoursite.com/2019/02/13/%E9%81%87%E5%B1%B1%E5%BC%80%E8%B7%AF%E9%81%87%E6%B2%B3%E6%9E%B6%E6%A1%A5/"/>
    <id>http://yoursite.com/2019/02/13/遇山开路遇河架桥/</id>
    <published>2019-02-13T03:07:48.000Z</published>
    <updated>2019-10-28T07:28:35.646Z</updated>
    
    <content type="html"><![CDATA[<img src="https://ws2.sinaimg.cn/large/006tNc79ly1g04mdrp5d3j30p00ank9l.jpg" /><a id="more"></a><p>年前两个组件，困扰自己很久，主要是自己畏难作祟，不敢触碰。在 2018 年年终总结的时候就和自己说过，自己不够自信，但是今年的自己的 slogan 是 「足够自信，足够自律」。</p><p>过年期间，有三件事对自己感触比较深：</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>1 去大舅家拜年，大舅得脑血栓，行走困难，在秋姐家感受到大舅想走，自己特别要强的样子，但是就是走不了。一步步挪的非常吃力。 我心软看不了这些，家里老舅也是这个毛病，现在需要舅妈全职照顾，吃饭都不能正常吃。我记得之前看过一篇文章，劝一个 90 多岁的老太太不要吸烟了，但是她回应：「我都不能抽烟了，还活着干什么？」。 听罗胖的音频节目介绍到，美国是不禁枪的，医疗水平好，人寿命长，一位老人在自己家预备了很多枪。别人好奇为什么，老者说：「我可不想老了插着很多罐子活着，这些枪是给我自己准备的」。是啊 ，一个人有尊严的活着是多么重要的事情。我们时常劝父母，要注意身体，但是自己肆意挥霍年轻「所谓的资本」。总是说着形同虚设的话「身体是革命的本钱」，却从来没有，真正审视自己客观情况。 罗胖在跨年演讲上说，我们这一辈很有机会活很长时间，这是第二次听这个概念。然而自己有没有为这个做好准备呢？日常很多烦恼都是暂时的，没有永久的烦恼，没有永久的工作。村上春树在《我的职业是小说家》中提过，纵然有强大的灵魂，也要为这个灵魂配置个强健的容器。道理都懂，践行却难。身体健康，心里健康都非常重要。<br>新的一年健身不是为了什么减肥不减肥，是为了那个强大的自己而准备。</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>2 是在 CCTV 《挑战不可能》这个节目，一个 5 岁的神童能背诵几百首唐诗宋词，仅仅提示 3 个字就能背诵整首诗，当采访他是怎么做到的，他说了什么事情做一遍不成功，就再做一遍，在不成功再做一遍直到成功为止。这是一个 5 岁小孩的做事态度和方法。</p><h3 id="信仰"><a href="#信仰" class="headerlink" title="信仰"></a>信仰</h3><p>第三个故事我不赘述，<a href="https://mp.weixin.qq.com/s/xbtLQqEcXJzTXrFHcCNu2g" target="_blank" rel="noopener">没有比人更高的山！珠峰让他失去双腿，43 年不懈攀登，69 岁的他终于用钢铁之肢挺立在珠峰之巅！</a> 这个故事看到自己感动，如果是一般人，应该就是轮椅上过一生，却一次又一次不怕失败，最终攀上珠峰。 我想每个人心中都没有那座珠峰。如果没有信仰，人活着说多么干瘪。</p><p>生活和工作中有很多事情逃是逃不掉的，索性正面迎击，战以养身。「足够自信，足够自律」，用习大大给党员的一句话激励自己 「遇山开路，遇河架桥」。</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1g04mdrp5d3j30p00ank9l.jpg&quot; /&gt;
    
    </summary>
    
    
    
      <category term="思考" scheme="http://yoursite.com/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>📖自省书📖</title>
    <link href="http://yoursite.com/2019/01/23/%F0%9F%93%96%E8%87%AA%E7%9C%81%E4%B9%A6%F0%9F%93%96/"/>
    <id>http://yoursite.com/2019/01/23/📖自省书📖/</id>
    <published>2019-01-23T09:26:22.000Z</published>
    <updated>2019-10-28T07:28:35.646Z</updated>
    
    <content type="html"><![CDATA[<img src="https://ws1.sinaimg.cn/large/006tNc79ly1fzgng0nk0dj30p00an41m.jpg" /><a id="more"></a><p>自己工作状态不好持续时间挺长了，一直没有得到缓解。 自己陷入了，手上的任务难度很高很复杂，难以开始自己的工作，畏难不愿意开始，逃避总是在电脑前坐不住，每年到过年快放假的时候自己就这个样子。然后自己「责任心」泛滥，搞的自己很焦虑，有时候还影响自己的睡眠。这完全是个恶性循环。</p><p>自己调整无果后，向邱建求助</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fzgn6hx4fyj30n01dsqgd.jpg" alt=""><br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fzgn6ldjirj30n01dsh0r.jpg" alt=""><br><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fzgn6p0cdtj30n01ds7j0.jpg" alt=""><br><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fzgn6rwmzij30n01dsalx.jpg" alt=""></p><p>自己按照大师的方法尝试调整下自己。但是调整自己之前，想写一封「自省书」，给自己泼一脸冷水让自己清醒清醒。</p><h3 id="🎏-理想型性格让自己特别累"><a href="#🎏-理想型性格让自己特别累" class="headerlink" title="🎏 理想型性格让自己特别累"></a>🎏 理想型性格让自己特别累</h3><p>自己，今天看了 2018 年的滴滴的打车数据，凌晨到家的数据 69 次，还是怀念那段奋不顾身的日子，感觉回来远程工作之后生活气息重了。想想这不是自己想要逃离北京的想要的么，想要更多的生活，人总是矛盾。去年忙了一年，可谓是「晨兴理荒会，带月荷锄归」。但是工作成果「草盛豆苗稀」。发现自己活得累，但是一直不明白为什么累。今天想想，就是自己的理想主义，理想主义，说好听点是精神洁癖，说不好听就是矫情。优点和缺点很明显。优点是要求比较高，比如装修的时候，所有家具都选择了曲美高端系列，自己很满意。生活工作中都是提着一口仙气，对自己对工作输出都是有要求的。缺点也很明显：脆弱，经常由于自己考虑的太多，影响了工作输出，尤其是自己的期望高于自己能力的时候，把自己搞得压力特别大。<br>针对这个性格弱点，邱建给的建议特别好，不断调整自己工作节奏，不要盯着工作效率。工作效率没那么重要。我对这句话的理解是：速度，难度，量，三者至多选两个，三个是不可能的。所以效率稳定输出，还是蛮重要的。第二点，平时自己的工作内外的事情，都推崇敏捷迭代，把复杂的任务拆解，成细小的任务，如果还是不能马上着手开始，那说明拆分细节还不够。</p><h3 id="🤲-应该双手捧着这碗饭"><a href="#🤲-应该双手捧着这碗饭" class="headerlink" title="🤲 应该双手捧着这碗饭"></a>🤲 应该双手捧着这碗饭</h3><p>说实话在国内，能远程的工作机会特别难的，承蒙不弃，自己还能在家远程工作，况且今年还得到了公司的奖励。面前的这碗饭来之不易，应该捧起来吃。不能造次，不可嬉戏。儒家讲修身齐家治国平天下，但是自己总是过高的评价自己，上来就是「治国」、「平天下」了。 对于技术人和这个道理是一样的，先把自己手上的任务，这是「修身」。再考虑向团队输出价值，最后向公司输出价值，最后考虑向社区输出价值。这是一个技术人的应有的「江湖」，而不是每天想着有的没得。对待工作态度不能有丝毫懈怠。</p><h3 id="🤹‍-克服自己恐惧"><a href="#🤹‍-克服自己恐惧" class="headerlink" title="🤹‍ 克服自己恐惧"></a>🤹‍ 克服自己恐惧</h3><p>自己有个特别不好性格缺点，特别畏难，自己特别害怕自己不熟悉的事情。事情难可以拆分多个简单任务去执行。</p><p>最后，少空想，多实干。迷茫的时候就看看 2019 年的目标</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNc79ly1fzgng0nk0dj30p00an41m.jpg&quot; /&gt;
    
    </summary>
    
    
    
      <category term="思考" scheme="http://yoursite.com/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>2018年回顾🏁2019年展望🏄</title>
    <link href="http://yoursite.com/2019/01/15/2018%E5%B9%B4%E5%9B%9E%E9%A1%BE%F0%9F%8F%812019%E5%B9%B4%E5%B1%95%E6%9C%9B%F0%9F%8F%84/"/>
    <id>http://yoursite.com/2019/01/15/2018年回顾🏁2019年展望🏄/</id>
    <published>2019-01-15T10:50:04.000Z</published>
    <updated>2019-10-28T07:28:35.642Z</updated>
    
    <content type="html"><![CDATA[<img src="https://ws3.sinaimg.cn/large/006tNc79ly1fz7gvsh9cfj30p00andm8.jpg" />每年跨年和老婆都要做的事情：1跨年晚宴，2 晚宴上聊聊这一年。 2019年和老婆一起撸串，回顾了一下我们的2018，展望下2019，给两个人定了一些小目标。<a id="more"></a><h2 id="2018-年回顾"><a href="#2018-年回顾" class="headerlink" title="2018 年回顾"></a>2018 年回顾</h2><h3 id="2018-年大事记"><a href="#2018-年大事记" class="headerlink" title="2018 年大事记"></a>2018 年大事记</h3><ol><li>博士毕业， 从天津搬家回秦皇岛 👩🏻‍🎓🚗🚗🏠🏠🎏</li><li>过年给父母买衣服逛街 👔👗🛍</li><li>新房开始硬装 🔑🏠</li><li>正式入职河北科技师范 🏫</li><li>结婚 💒🎉💑</li><li>开始理财 💵💰💳</li><li>端午带父母去野生动物园和小天路</li><li>蜜月旅行：去巴塞罗那 🇪🇸 旅行</li><li>劝父母不要种大棚蔬菜</li><li>在昌黎黎租房定居</li><li>定软装</li><li>回秦皇岛远程</li><li>订杂志：三联生活周刊</li></ol><h3 id="2018-年总结："><a href="#2018-年总结：" class="headerlink" title="2018 年总结："></a>2018 年总结：</h3><p>2018 年做事有些拖泥带水，希望在新的一年里，做事果断一些，在 TODO List Top3 要及时清理掉</p><hr><h2 id="2019-年展望"><a href="#2019-年展望" class="headerlink" title="2019 年展望"></a>2019 年展望</h2><h3 id="一起要完成的事情"><a href="#一起要完成的事情" class="headerlink" title="一起要完成的事情"></a>一起要完成的事情</h3><ul><li><input disabled="" type="checkbox"> 完成装修<ul><li><input checked="" disabled="" type="checkbox"> 三月份之前需要散味的家具装完</li><li><input disabled="" type="checkbox"> 五月份之前家电齐全</li><li><input disabled="" type="checkbox"> 六月搬家</li></ul></li><li><input disabled="" type="checkbox"> 两个人的驾照<ul><li><input disabled="" type="checkbox"> 周洁芳驾照</li><li><input disabled="" type="checkbox"> 寇云驾照</li></ul></li><li><input disabled="" type="checkbox"> 买车（初步定凯迪拉克 XT4 四驱基础版）</li><li><input disabled="" type="checkbox"> 去台湾旅行</li><li><input disabled="" type="checkbox"> 自驾游一次</li><li><input disabled="" type="checkbox"> 带双方父母出行 4 次以上</li><li><input disabled="" type="checkbox"> 存款到达 25W</li><li><input disabled="" type="checkbox"> 严格按照作息时间表作息</li><li><input disabled="" type="checkbox"> 记账</li><li><input checked="" disabled="" type="checkbox"> 养宠物</li></ul><h3 id="周洁芳-2019-目标"><a href="#周洁芳-2019-目标" class="headerlink" title="周洁芳 2019 目标"></a>周洁芳 2019 目标</h3><ul><li><input disabled="" type="checkbox"> 把两篇文章投稿<ul><li><input disabled="" type="checkbox"> 第一篇</li><li><input disabled="" type="checkbox"> 第二篇</li></ul></li><li><input disabled="" type="checkbox"> 一项基金</li><li><input disabled="" type="checkbox"> 瘦十斤  👙👗</li><li><input disabled="" type="checkbox"> 做好 ppt🍀</li><li><input disabled="" type="checkbox"> 20 本书</li></ul><h3 id="寇云-2019-年目标"><a href="#寇云-2019-年目标" class="headerlink" title="寇云 2019 年目标"></a>寇云 2019 年目标</h3><ul><li><input disabled="" type="checkbox"> 英语学习到 Level5<ul><li><input disabled="" type="checkbox"> Level 2</li><li><input disabled="" type="checkbox"> Level 3</li><li><input disabled="" type="checkbox"> Level 4</li><li><input disabled="" type="checkbox"> Level 5</li></ul></li><li><input disabled="" type="checkbox"> 刷完网易云课堂大学课程</li><li><input disabled="" type="checkbox"> 刷完 Egghead 课程</li><li><input disabled="" type="checkbox"> 刷完 FrontEnd Master 课程</li><li><input disabled="" type="checkbox"> 刷完极客时间课程</li><li><input disabled="" type="checkbox"> 80 篇技术博客和笔记(2/80)</li><li><input disabled="" type="checkbox"> 50 本书（14/50）</li><li><input disabled="" type="checkbox"> 20 次技术分享</li></ul><hr><h2 id="2019-对彼此的要求"><a href="#2019-对彼此的要求" class="headerlink" title="2019 对彼此的要求"></a>2019 对彼此的要求</h2><h3 id="周洁芳对寇云的要求"><a href="#周洁芳对寇云的要求" class="headerlink" title="周洁芳对寇云的要求"></a>周洁芳对寇云的要求</h3><ol><li>要有耐心</li><li>说到做到</li><li>每天对周洁芳，多宠一点，关心一点</li><li>听周洁芳的话</li></ol><h3 id="寇云对周洁芳的要求"><a href="#寇云对周洁芳的要求" class="headerlink" title="寇云对周洁芳的要求"></a>寇云对周洁芳的要求</h3><ol><li>做事要有耐心</li><li>减少手机使用时间</li><li>做事积极点</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://ws3.sinaimg.cn/large/006tNc79ly1fz7gvsh9cfj30p00andm8.jpg&quot; /&gt;
每年跨年和老婆都要做的事情：1跨年晚宴，2 晚宴上聊聊这一年。 2019年和老婆一起撸串，回顾了一下我们的2018，展望下2019，给两个人定了一些小目标。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>前端异常监控</title>
    <link href="http://yoursite.com/2017/04/07/%E5%89%8D%E7%AB%AF%E5%BC%82%E5%B8%B8%E7%9B%91%E6%8E%A7/"/>
    <id>http://yoursite.com/2017/04/07/前端异常监控/</id>
    <published>2017-04-07T15:44:49.000Z</published>
    <updated>2019-10-28T07:28:35.645Z</updated>
    
    <content type="html"><![CDATA[<p>最近和Youwei 兰兰一起写开源项目 <a href="https://github.com/wuxiaolan91/bugWatch" target="_blank" rel="noopener">bugWatch</a>  由于精力比较少，没有贡献代码，但是碎片时间还是做了一些功课，把做的功课分享给大家。</p><h2 id="1-为什么要做前端异常监控"><a href="#1-为什么要做前端异常监控" class="headerlink" title="1.   为什么要做前端异常监控"></a>1.   为什么要做前端异常监控</h2><p>在 Web 应用异常复杂的今天，一个页面不单单只包含文字、图片和超链接，还可能包含复杂表单、大量动画、海量交互。很多 Web 应用完全单页化，操作体验、复杂程度堪比原生应用。这对开发者们来说，是巨大的挑战，纵然有 unit test、code review、各种黑白盒测试保价护航，也无法保证代码上线后，面对成千上万用户、在各类浏览器下、遇到未知数据时不出问题。所以，对一个拥有大量用户的互联网产品而言，一个可靠的前端异常数据采集、上报、处理、监控、报警平台是非常有必要的。</p><h2 id="2-采集哪些异常"><a href="#2-采集哪些异常" class="headerlink" title="2.   采集哪些异常"></a>2.   采集哪些异常</h2><ol><li>HTML 标签异常，CSS 展现异常，样式、图片、脚本文件的请求异常、脚本执行异常</li><li>用户自身的网络环境，如网速很慢、被运营商强行注入标签或脚本</li><li>交互逻辑错误、获取填充数据提交导致的脚本错误</li></ol><h2 id="3-采集方法"><a href="#3-采集方法" class="headerlink" title="3.   采集方法"></a>3.   采集方法</h2><h3 id="3-1-主动上报API"><a href="#3-1-主动上报API" class="headerlink" title="3.1 主动上报API"></a>3.1 主动上报API</h3><p>设计诸如此类的错误我们的设计原则：1 非阻塞  2 非入侵。秉持统计代码和业务代码分离的原则，但是留出业务代码中主动上报的接口。<br>思路：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// test.js</span></span><br><span class="line"><span class="comment">// 业务代码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// code...</span></span><br><span class="line">  <span class="keyword">return</span> val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(calc() !== <span class="string">"someVal"</span>)&#123;</span><br><span class="line">  Reporter.send(&#123;</span><br><span class="line">    position: <span class="string">"test.js::&lt;Function&gt;calc"</span></span><br><span class="line">    msg: <span class="string">"calc error"</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-进化版本"><a href="#3-2-进化版本" class="headerlink" title="3.2 进化版本"></a>3.2 进化版本</h3><p>用<code>try..catch</code>  判断一个代码段中存在的错误</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  init();</span><br><span class="line">  <span class="comment">// 业务代码段入口</span></span><br><span class="line">&#125; <span class="keyword">catch</span>(e)&#123;</span><br><span class="line">  Reporter.send(format(e));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也属于主动上报范畴 以<code>init</code> 为程序的入口，代码中所有同步执行出现的错误都会被捕获，这种方式也可以很好的避免程序刚跑起来就挂。<br>主动上报，说个有意思的案例：哔哩哔哩的播放器，用户点击后主动收集客户端的所有信息以及cookie，ls等信息。</p><h3 id="3-3-捕获全局错误"><a href="#3-3-捕获全局错误" class="headerlink" title="3.3 捕获全局错误"></a>3.3 捕获全局错误</h3><p>我们可以通过 window.onerror 来捕获页面上的各种脚本执行异常，它能帮助我们获取有用的信息。这个方法存在兼容性问题，在不同的浏览器上提供的数据不完全一致，部分过时的浏览器只能提供部分数据。它的标准函数签名是这样的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onerror = <span class="function"><span class="keyword">function</span> (<span class="params">message, url, lineNo, columnNo, error</span>)</span></span><br></pre></td></tr></table></figure><ul><li>message {String} 错误信息。直观的错误描述信息，不过有时候你确实无法从这里面看出端倪，特别是压缩后脚本的报错信息，可能让你更加疑惑。</li><li>url {String} 发生错误对应的脚本路径。</li><li>lineNo {Number} 错误发生的行号。</li><li>columnNo {Number} 错误发生的列号。</li><li>error {Object} 具体的 error 对象，继承自 window.Error 的某一类，部分属性和前面几项有重叠，但是包含更加详细的错误调用堆栈信息，这对于定位错误非常有帮助。</li></ul><h3 id="3-4-Ajax-上下文"><a href="#3-4-Ajax-上下文" class="headerlink" title="3.4 Ajax 上下文"></a>3.4 Ajax 上下文</h3><p>Ajax 的请求上下文对于排错会有一定帮助，可以使用XMLHttpRequest.prototype 上的各类方法，也可以获取返回数据的 statusCode、statusText，甚至是 responseText（不建议获取这种可能会是大容量数据的信息</p><h3 id="3-5-三方库依赖"><a href="#3-5-三方库依赖" class="headerlink" title="3.5 三方库依赖"></a>3.5 三方库依赖</h3><p>现在的系统，几乎都是构建在一些流行的库之上的。jQuery、angular、react.js、vue.js、backbone、underscore、knockout，这些常用的类库，发布时大都会带版本信息，如</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">`jQuery`, `jQuery.fn.jquery`,</span><br><span class="line">`jQuery ui`, `jQuery.ui.version`,</span><br><span class="line">`lodash(underscore)`,`_.VERSION`,</span><br><span class="line">`Backbone`, `Backbone.VERSION`,</span><br><span class="line">`knockout`, `ko.version`,</span><br><span class="line">`Angular`, `angular.version.full`,</span><br><span class="line">`React`, `React.version`,</span><br><span class="line">`Vue`, `Vue.version`,</span><br></pre></td></tr></table></figure><h3 id="3-6-浏览器数据"><a href="#3-6-浏览器数据" class="headerlink" title="3.6 浏览器数据"></a>3.6 浏览器数据</h3><p>这个就比较简单了，收集userAgent</p><h2 id="4-采集上报数据接口设计"><a href="#4-采集上报数据接口设计" class="headerlink" title="4.  采集上报数据接口设计"></a>4.  采集上报数据接口设计</h2><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1feeisivxkpj30dz0gwq4s.jpg" alt=""><br>以上为标准格式设计，在ext中可以个性化的设置一些错误类型</p><ul><li>针对业务设计 token userid</li><li>辅助调试类</li></ul><h2 id="5-采集结果的输出"><a href="#5-采集结果的输出" class="headerlink" title="5.  采集结果的输出"></a>5.  采集结果的输出</h2><p>篇幅有限暂时不展开<br>前端同学可以用egg.js + vue + g2.js(D3,js)  配合elasticsearch的API来做接口，来输出bugwatch 管理后台<br>管理后台的思路：</p><ol><li>用户管理。</li><li>权限管理。</li><li>错误聚合以及展示</li><li>错误详情展示</li></ol><p>如果敏感模块报错，或者报错密度比较集中（可以设计阀值），开启短信，邮件推送，聊天机器人推送等等。（本人非常讨厌 2333333）</p><h3 id="6-总结。"><a href="#6-总结。" class="headerlink" title="6.总结。"></a>6.总结。</h3><p>错误难免，监控要到位</p><p>参考开源库：</p><ul><li>flextracker</li><li>badjs</li><li>JSTracker</li><li>saijs</li><li>ravenjs</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近和Youwei 兰兰一起写开源项目 &lt;a href=&quot;https://github.com/wuxiaolan91/bugWatch&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;bugWatch&lt;/a&gt;  由于精力比较少，没有贡献代码，但是碎片时间还
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Linux 学习笔记-Linux系统监控</title>
    <link href="http://yoursite.com/2017/03/24/Linux-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Linux%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    <id>http://yoursite.com/2017/03/24/Linux-学习笔记-Linux系统监控/</id>
    <published>2017-03-24T15:07:58.000Z</published>
    <updated>2019-10-28T07:28:35.643Z</updated>
    
    <content type="html"><![CDATA[<p>系统监控的重要性<br>我们的系统一旦上线跑起来我们自然希望它一直相安无事，不要宕机，不要无响应，不要慢腾腾的。但是这不是打开机器电源然后放任不管就可以得到的。所以我们要监视系统的运行状况，发现问题及时处理。 　对于系统和网络管理员来说每天监控和调试Linux系统的性能问题是一项繁重的工作。监控和保持系统启动并运行是很不容易的一件事。接下来介绍部分linux的系统监控命令。</p><h2 id="常用系统监控命令介绍"><a href="#常用系统监控命令介绍" class="headerlink" title="常用系统监控命令介绍"></a>常用系统监控命令介绍</h2><h3 id="Linux进程监控：TOP"><a href="#Linux进程监控：TOP" class="headerlink" title="Linux进程监控：TOP"></a>Linux进程监控：TOP</h3><p>Linux下的Top命令是一个性能监控程序，许多系统管理员常常用它来监控Linux性能，在许多Linux或者类Unix操作系统里都有这个命令。Top命令用于按一定的顺序显示所有正在运行而且处于活动状态的实时进程，而且会定期更新显示结果。这条命令显示了CPU的使用率、内存使用率、交换内存使用大小、高速缓存使用大小、缓冲区使用大小，进程PID、所使用命令以及其他。它还可以显示正在运行进程的内存和CPU占用多的情况。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1fdyb0rkqg4j30pq0hbqfz.jpg" alt=""><br>在图中依次可以看到进程PID,进程用户，CPU使用率，内存使用率、交换内存使用大小等等信息。top命令提供了实时的对系统处理器的状态监视.它将显示系统中CPU最“敏感”的任务列表.</p><h3 id="虚拟内存统计-vmstat"><a href="#虚拟内存统计-vmstat" class="headerlink" title="虚拟内存统计 : vmstat"></a>虚拟内存统计 : vmstat</h3><p>Linux 的 VmStat 命令用于显示虚拟内存、内核线程、磁盘、系统进程、I/O 块、中断、CPU 活动 等的统计信息。</p><p>一般vmstat工具的使用是通过两个数字参数来完成的，第一个参数是采样的时间间隔数，单位是秒，第二个参数是采样的次数，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmstat 2 1</span><br></pre></td></tr></table></figure><p>操作截图：<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1fdyb34eyrmj30p301z0tr.jpg" alt=""></p><ul><li>r  ：表示运行队列，如果运行队列过大，表示你的CPU很繁忙，一般会造成CPU使用率很高</li><li>b  ：表示阻塞的进程数</li><li>swpd ：虚拟内存已使用的大小，如果大于0，表示你的机器物理内存不足了，如果不是程序内存泄露的原因，那么你该升级内存了或者把耗内存的任务迁移到其他机器</li><li>free  ：空闲的物理内存的大小</li><li>buff  ： 系统占用的缓存大小</li><li>cache ：直接用来记忆我们打开的文件,给文件做缓冲</li><li>si  ：每秒从磁盘读入虚拟内存的大小，如果这个值大于0，表示物理内存不够用或者内存泄露了</li><li>us ：用户CPU时间</li><li>sy ：系统CPU时间</li><li>so ： 每秒虚拟内存写入磁盘的大小，如果这个值大于0，同上。</li><li>sy ： 系统CPU时间，如果太高，表示系统调用时间长，例如是IO操作频繁。</li><li>id  ： 空闲 CPU时间，一般来说，id + us + sy = 100</li><li>wt ： 等待IO CPU时间。</li></ul><h3 id="列出打开的文件：lsof"><a href="#列出打开的文件：lsof" class="headerlink" title="列出打开的文件：lsof"></a>列出打开的文件：lsof</h3><p>它常用于以列表的形式显示所有打开的文件和进程。打开的文件包括磁盘文件、网络套接字、管道、设备和进程。使用这条命令的主要情形之一就是在无法挂载磁盘和显示正在使用或者打开某个文件的错误信息的时候。使用这条命令，你可以很容易地看到正在使用哪个文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof</span><br></pre></td></tr></table></figure><h3 id="网络包分析器：tcpdump"><a href="#网络包分析器：tcpdump" class="headerlink" title="网络包分析器：tcpdump"></a>网络包分析器：tcpdump</h3><p>Tcpdump是最广泛使用的网络包分析器或者包监控程序之一，它用于捕捉或者过滤网络上指定接口上接收或者传输的TCP/IP包。它还有一个选项用于把捕捉到的包保存到文件里，以便以后进行分析。 </p><ul><li>-h：查看命令帮助</li><li>-i：网络接口 </li><li>-c ：需要输出包数量<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install tcpdump </span><br><span class="line">$ tcpdump -h</span><br><span class="line">$ sudo tcpdump -i eth0 -c 3</span><br></pre></td></tr></table></figure>输出结果<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1fdybcnegttj313k07r0z2.jpg" alt=""><h3 id="进程监控：Htop"><a href="#进程监控：Htop" class="headerlink" title="进程监控：Htop"></a>进程监控：Htop</h3>Htop 是一个非常高级的交互式的实时linux进程监控工具。 它和top命令十分相似，但是它具有更丰富的特性，例如用户可以友好地管理进程，快捷键，垂直和水平方式显示进程等等。 Htop是一个第三方工具，它不包含在linux系统中，你需要使用管理工具去安装它。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install htop</span><br><span class="line">$ htop</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;系统监控的重要性&lt;br&gt;我们的系统一旦上线跑起来我们自然希望它一直相安无事，不要宕机，不要无响应，不要慢腾腾的。但是这不是打开机器电源然后放任不管就可以得到的。所以我们要监视系统的运行状况，发现问题及时处理。 　对于系统和网络管理员来说每天监控和调试Linux系统的性能问题
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Linux 学习笔记-计划任务之Crontab</title>
    <link href="http://yoursite.com/2017/03/17/Linux-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%B9%8BCrontab/"/>
    <id>http://yoursite.com/2017/03/17/Linux-学习笔记-计划任务之Crontab/</id>
    <published>2017-03-17T14:07:56.000Z</published>
    <updated>2019-10-28T07:28:35.643Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Crontab  从定时重复工作中解脱出来  </p></blockquote><h2 id="工作中遇到的困难"><a href="#工作中遇到的困难" class="headerlink" title="工作中遇到的困难"></a>工作中遇到的困难</h2><ul><li>每分钟需要执行一个程序检查系统运行状态</li><li>每天凌晨需要对过去一天的业务数据进行统计</li><li>每个星期需要把日志文件备份</li><li>每个月需要把数据库进行备份</li></ul><h2 id="Crontab-简介"><a href="#Crontab-简介" class="headerlink" title="Crontab 简介"></a>Crontab 简介</h2><h3 id="Crontab-是什么"><a href="#Crontab-是什么" class="headerlink" title="Crontab 是什么"></a>Crontab 是什么</h3><p>Crontab 是一个用于设置周期性被执行任务的工具。</p><ul><li>被周期性执行的任务我们陈伟Cron Job</li><li>周期执行的任务列表我们称为Cron Table</li></ul><h2 id="Crontab-实践"><a href="#Crontab-实践" class="headerlink" title="Crontab 实践"></a>Crontab 实践</h2><h3 id="检查cron服务"><a href="#检查cron服务" class="headerlink" title="检查cron服务"></a>检查cron服务</h3><ul><li>检查Crontab工具是否安装： crontab -l</li><li>检查Crontab 服务是否启动： service crond status<h3 id="安装cron"><a href="#安装cron" class="headerlink" title="安装cron"></a>安装cron</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install vixie-cron</span><br><span class="line">yum install crontabs</span><br></pre></td></tr></table></figure></li></ul><h3 id="一个简单的例子"><a href="#一个简单的例子" class="headerlink" title="一个简单的例子"></a>一个简单的例子</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编辑定时任务脚本</span></span><br><span class="line">crontab -e</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加一条简单的定时命令每分钟打印时间</span></span><br><span class="line">[vi模式] *／1 * * * * date &gt;&gt; /tmp/log.txt</span><br></pre></td></tr></table></figure><p>一个实用的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示文件的最后三行</span></span><br><span class="line">tail -3 文件 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 动态刷新显示文件的最后几行</span></span><br><span class="line">tail -f 文件</span><br></pre></td></tr></table></figure><h3 id="Crontab-的基本组成"><a href="#Crontab-的基本组成" class="headerlink" title="Crontab 的基本组成"></a>Crontab 的基本组成</h3><p>系统服务 <strong>crond</strong> 每分钟都会从配置文件刷新定时任务<br><img src="http://ww1.sinaimg.cn/large/006tKfTcly1fdq5o38sktj30kg07st9r.jpg" alt=""></p><h3 id="Crontab-的配置文件格式"><a href="#Crontab-的配置文件格式" class="headerlink" title="Crontab 的配置文件格式"></a>Crontab 的配置文件格式</h3><p><code>* * * * * COMMAND</code><br><img src="http://ww1.sinaimg.cn/large/006tNc79ly1fdq5qq82ivj30ef072t9c.jpg" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#每晚的21:30重启apache</span></span><br><span class="line">30 21 * * * service httpd restart</span><br><span class="line"></span><br><span class="line"><span class="comment">#每月1、10、22日的4:45重启apache</span></span><br><span class="line">45 4 1,10,22 * * service httpd restart</span><br><span class="line"></span><br><span class="line"><span class="comment">#每月1到10日的4:45重启apache</span></span><br><span class="line">45 4 1-10 * * service httpd restart</span><br><span class="line"></span><br><span class="line"><span class="comment">#每隔两分钟重启apache</span></span><br><span class="line">*／2 * * * * service httpd restart</span><br><span class="line">1-59/2 * * * * service httpd restart</span><br><span class="line"></span><br><span class="line"><span class="comment">#晚上11点到早上7点之间，每小时重启apache</span></span><br><span class="line">0 23-7/1 * * * service httpd restart</span><br><span class="line"></span><br><span class="line"><span class="comment">#每天18:00至23:00之间每隔30分钟重启apache</span></span><br><span class="line">0,30 18-23 * * * service httpd restart</span><br><span class="line">0-59/30 18-23 * * * service httpd restart</span><br></pre></td></tr></table></figure><ul><li><ul><li>表示人设时候都匹配</li></ul></li><li>可以用“A,B,C”表示A或者B或者C时执行命令</li><li>可以用“A-B” 表示 A到B之间时执行命令</li><li>可以用“*/A” 表示每A分钟（小时等）执行一次命令</li></ul><h3 id="Crontab-命令"><a href="#Crontab-命令" class="headerlink" title="Crontab 命令"></a>Crontab 命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab [选项]</span><br></pre></td></tr></table></figure><p>选项：</p><ul><li>-l  罗列定时任务列表</li><li>-e 编辑配置文件</li><li>-u 指定用户</li></ul><h3 id="Crontab-命令日志"><a href="#Crontab-命令日志" class="headerlink" title="Crontab 命令日志"></a>Crontab 命令日志</h3><p>/var/log/cron文件保存着cron的任务执行记录</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Crontab  从定时重复工作中解脱出来  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;工作中遇到的困难&quot;&gt;&lt;a href=&quot;#工作中遇到的困难&quot; class=&quot;headerlink&quot; title=&quot;工作中遇到的困难&quot;&gt;&lt;/a&gt;工作中遇
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Linux学习笔记-软件安装管理</title>
    <link href="http://yoursite.com/2017/03/10/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2017/03/10/Linux学习笔记-软件安装管理/</id>
    <published>2017-03-10T15:35:02.000Z</published>
    <updated>2019-10-28T07:28:35.643Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/006tNc79gy1fdi6wuabaxj30z00jpwkt.jpg" alt=""></p><h2 id="0-Linux-软件安装管理概述"><a href="#0-Linux-软件安装管理概述" class="headerlink" title="0 Linux 软件安装管理概述"></a>0 Linux 软件安装管理概述</h2><p><strong>一、软件包管理简介</strong><br><strong>二、rpm命令管理</strong><br><strong>三、yum在线管理</strong><br><strong>四、源码包管理</strong><br><strong>五、脚本安装包</strong></p><h2 id="1-软件包管理简介"><a href="#1-软件包管理简介" class="headerlink" title="1 软件包管理简介"></a>1 软件包管理简介</h2><h3 id="软件包的分类"><a href="#软件包的分类" class="headerlink" title="软件包的分类"></a>软件包的分类</h3><ul><li>源码包</li><li>二进制包</li></ul><h3 id="源码包的特点"><a href="#源码包的特点" class="headerlink" title="源码包的特点"></a>源码包的特点</h3><ul><li>开源，如果有足够能力，可以修改源代码</li><li>可以自由选择所需的功能</li><li>软件四编译安装，更加适合自己的系统，更加稳定也效率更高</li><li>卸载方便</li></ul><h3 id="源码包的缺点"><a href="#源码包的缺点" class="headerlink" title="源码包的缺点"></a>源码包的缺点</h3><ul><li>安装过程步骤较多，尤其安装较大的软件集合，容易出现错误</li><li>编译过程时间较长，安装比二进制安装时间长</li><li>因为是编译安装，安装过程中一旦报错新手很难解决</li></ul><h3 id="二进制包的优点"><a href="#二进制包的优点" class="headerlink" title="二进制包的优点"></a>二进制包的优点</h3><ul><li>包管理系统简单，只通过几个命令就可以实现包的安装、升级、查询和卸载</li><li>安装速度比源码包安装快得多</li></ul><h3 id="二进制包的缺点"><a href="#二进制包的缺点" class="headerlink" title="二进制包的缺点"></a>二进制包的缺点</h3><ul><li>经过变异，不再可以看到源代码</li><li>功能选择不如源码包灵活</li><li>依赖性</li></ul><h3 id="脚本安装包"><a href="#脚本安装包" class="headerlink" title="脚本安装包"></a>脚本安装包</h3><p>所谓的脚本安装包，就是把复杂的软件包安装过程写成了程序脚本，使用者可以自信程序脚本实现一键安装。单司机安装的还是源码包和二进制包</p><ul><li>优点：安装简单、快捷</li><li>缺点：完全丧失了自定义性</li></ul><h2 id="2-rpm命令管理"><a href="#2-rpm命令管理" class="headerlink" title="2 rpm命令管理"></a>2 rpm命令管理</h2><ul><li>RPM包命名规则</li><li>安装命令</li><li>升级与卸载</li><li>RPM包查询</li><li>RPM包校验</li></ul><h3 id="RPM包命名规则"><a href="#RPM包命名规则" class="headerlink" title="RPM包命名规则"></a>RPM包命名规则</h3><p>httpd-2.2.15-15.el6.centos.1.i686.rpm</p><ul><li>httpd 软件包名</li><li>2.2.15 软件版本</li><li>15 软件发布次数</li><li>el6.centos 适合的Linux平台</li><li>i686适合的硬件平台</li><li>rpm  rpm包扩展名</li></ul><h3 id="RPM包依赖性"><a href="#RPM包依赖性" class="headerlink" title="RPM包依赖性"></a>RPM包依赖性</h3><ul><li>树形依赖：a ➡️ b ➡️c </li><li>环形依赖:  a ➡️ b ➡️c ➡️ a</li><li>模块依赖：模块依赖，查询网站 <a href="http://www.rpmfind.net" target="_blank" rel="noopener">www.rpmfind.net</a></li></ul><h3 id="包全名与包名"><a href="#包全名与包名" class="headerlink" title="包全名与包名"></a>包全名与包名</h3><ul><li>包全名： 操作的包是没有安装的软件包时，使用包全名。而且要注意路径</li><li>包名：操作已经安装的软件包时，使用包名，是搜索<code>/var/lib/rpm/</code> 中的数据库</li></ul><h3 id="RPM安装命令"><a href="#RPM安装命令" class="headerlink" title="RPM安装命令"></a>RPM安装命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm [选项] 包全名</span><br></pre></td></tr></table></figure><p>选项：</p><ul><li><p>-i （install）安装</p></li><li><p>-v   (verbose) 显示信息信息</p></li><li><p>-h  (hash) 显示进度</p></li><li><ul><li><ul><li>nodeps 不检测依赖性</li></ul></li></ul><p><img src="http://ww4.sinaimg.cn/large/006tNc79gy1fdi59favpej30zf0feq5y.jpg" alt=""></p></li></ul><h3 id="RPM包升级"><a href="#RPM包升级" class="headerlink" title="RPM包升级"></a>RPM包升级</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh 包全名</span><br></pre></td></tr></table></figure><p>选项：</p><ul><li>-U (upgrade) 升级</li></ul><h3 id="RPM包卸载"><a href="#RPM包卸载" class="headerlink" title="RPM包卸载"></a>RPM包卸载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e 包名</span><br></pre></td></tr></table></figure><p>选项：</p><ul><li>-e (erase)  卸载</li></ul><h3 id="RPM包查询（是否安装）"><a href="#RPM包查询（是否安装）" class="headerlink" title="RPM包查询（是否安装）"></a>RPM包查询（是否安装）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa 包名</span><br></pre></td></tr></table></figure><p>选项：</p><ul><li>-q (query)  查询</li><li>-a (all) 全部</li></ul><p>常用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep 包名</span><br></pre></td></tr></table></figure><h3 id="查询软件包详细信息"><a href="#查询软件包详细信息" class="headerlink" title="查询软件包详细信息"></a>查询软件包详细信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qip 包名</span><br></pre></td></tr></table></figure><p>选项：</p><ul><li>-i (information)  查询软件信息</li><li>-p (package) 查询未安装包信息</li></ul><h3 id="查询软件包安装位置"><a href="#查询软件包安装位置" class="headerlink" title="查询软件包安装位置"></a>查询软件包安装位置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql 包名</span><br></pre></td></tr></table></figure><p>选项：</p><ul><li>-l (list)  列表</li><li>-p (package) 查询未安装包信息</li></ul><h3 id="查询系统文件属于哪个RPM包"><a href="#查询系统文件属于哪个RPM包" class="headerlink" title="查询系统文件属于哪个RPM包"></a>查询系统文件属于哪个RPM包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qf 系统文件名</span><br></pre></td></tr></table></figure><p>选项：</p><ul><li>-f (file)  文件</li></ul><h3 id="查询软件包的依赖性"><a href="#查询软件包的依赖性" class="headerlink" title="查询软件包的依赖性"></a>查询软件包的依赖性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qR 包名</span><br></pre></td></tr></table></figure><p>选项：</p><ul><li>-R (requires)  查询软件包的依赖性</li><li>-p (package) 查询未安装包信息</li></ul><h3 id="RPM包校验"><a href="#RPM包校验" class="headerlink" title="RPM包校验"></a>RPM包校验</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -V 已安装包名</span><br></pre></td></tr></table></figure><p>选项：</p><ul><li>-V (verify)  校验制定的RPM包中的文件</li></ul><h3 id="验证内容中的8个信息"><a href="#验证内容中的8个信息" class="headerlink" title="验证内容中的8个信息"></a>验证内容中的8个信息</h3><ul><li>S 文件大小是否改变</li><li>M 文件的类型或者权限（rwx）是否被改变</li><li>5 文件MD5校验是否改变</li><li>D 设备的主从代码是否改变</li><li>L文件路径是否改变</li><li>U 文件的属主是否改变</li><li>G 文件的属组是否改变</li><li>T 文件的修改司机安是否改变</li></ul><h2 id="3-yum在线管理"><a href="#3-yum在线管理" class="headerlink" title="3 yum在线管理"></a>3 yum在线管理</h2><p>好处：将所有软件包放到官方服务器上，当警醒yum在线安装时，可以自动解决依赖性问题</p><h3 id="yum源文件"><a href="#yum源文件" class="headerlink" title="yum源文件"></a>yum源文件</h3><p><img src="http://ww4.sinaimg.cn/large/006tNc79gy1fdi5arjs1gj30yg0hrwi6.jpg" alt=""></p><h3 id="yum命令"><a href="#yum命令" class="headerlink" title="yum命令"></a>yum命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum list</span><br><span class="line"><span class="comment">#查询所有可用的软件包列表</span></span><br><span class="line">yum search 关键字</span><br><span class="line"><span class="comment">#搜索服务器上所有和关键字相关的包</span></span><br><span class="line">yum -y install 包名</span><br><span class="line"><span class="comment">#安装包 -y 自动回答yes</span></span><br><span class="line">yum -y update 包名</span><br><span class="line"><span class="comment">#升级包</span></span><br><span class="line">yum -y remove 包名</span><br><span class="line"><span class="comment">#卸载包</span></span><br></pre></td></tr></table></figure><p>⚠️  服务器使用最小化安装，用什么软件安装什么，尽量不卸载</p><p>yum软件组管理命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum grouplist</span><br><span class="line"><span class="comment">#列出所有可用额度软件组列表</span></span><br><span class="line">yum groupinstall 软件组名</span><br><span class="line"><span class="comment">#安装指定软件组，组名可以由grouplist查询出来</span></span><br><span class="line">yum groupremove 软件组</span><br><span class="line"><span class="comment">#卸载指定软件组</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006tNc79gy1fdi6wuabaxj30z00jpwkt.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;0-Linux-软件安装管理概述&quot;&gt;&lt;a href=&quot;#0-Linux-软件安装管
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Shell编程笔记01</title>
    <link href="http://yoursite.com/2017/03/01/Shell%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B001/"/>
    <id>http://yoursite.com/2017/03/01/Shell编程笔记01/</id>
    <published>2017-03-01T09:39:25.000Z</published>
    <updated>2019-10-28T07:28:35.644Z</updated>
    
    <content type="html"><![CDATA[<p>Shell概述</p><blockquote><p>Shell 是一个用C语言编写的程序，它是用户使用Linux的桥梁。Shell既是一种命令语言，又是一种程序设计语言。<br>Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。<br><img src="http://ww4.sinaimg.cn/large/006tNc79gy1fd6bbbjo0ej307w08imxk.jpg" alt=""></p></blockquote><ul><li>Shell 的两种主要语法类型有Bourne和C，这两种语法彼此不兼容。Bourne家族主要包括 <code>sh</code> <code>ksh</code> <code>Bash</code> <code>psh</code> <code>zsh</code>;  C家族主要包括：<code>csh</code> <code>tcsh</code></li></ul><p>查看当前Shell类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$SHELL</span></span><br></pre></td></tr></table></figure><p>/bin/zsh</p><p>查看当前系统支持的shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/shells</span><br></pre></td></tr></table></figure><h2 id="脚本的执行方法"><a href="#脚本的执行方法" class="headerlink" title="脚本的执行方法"></a>脚本的执行方法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#The frist shell</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[1;36m hello world \e[0m"</span></span><br></pre></td></tr></table></figure><p>执行上面的脚本</p><ul><li>赋予执行权限，直接运行 <code>chmod 755 hello.sh</code>  <code>./hello.sh</code></li><li>通过bash调用执行脚本 <code>bash hello.sh</code></li></ul><h2 id="Bash的基本功能"><a href="#Bash的基本功能" class="headerlink" title="Bash的基本功能"></a>Bash的基本功能</h2><h3 id="命令别名与快捷键"><a href="#命令别名与快捷键" class="headerlink" title="命令别名与快捷键"></a>命令别名与快捷键</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看系统中别名配置列表</span></span><br><span class="line"> <span class="built_in">alias</span></span><br><span class="line"><span class="comment">#设置别名</span></span><br><span class="line"> <span class="built_in">alias</span> rm=<span class="string">"rm -i"</span></span><br></pre></td></tr></table></figure><p>注意：以上alias 是临时的一旦用户注销就回销毁<br>如果想始终生效需要修改 <code>.bashrc</code>文件<br> <code>.bashrc</code> 文件修改后需要重新登录生效<br> <code>source .bashrc</code>  可以直接生效</p><h3 id="删除别名"><a href="#删除别名" class="headerlink" title="删除别名"></a>删除别名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unalias</span></span><br></pre></td></tr></table></figure><p>这个也是临时删除，永久删除修改 <code>.bashrc</code></p><h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><ul><li>ctrl + c  强制当前命令</li><li>ctrl + l   清屏</li><li>ctrl + a  光标移到到命令行首</li><li>ctrl + e  光标移到到命令行尾</li><li>ctrl + u  从光标所在位置删除到行首</li><li>ctrl + z  把命令放入后台</li><li>ctrl + r  在历史命令中搜索</li></ul><h3 id="历史命令"><a href="#历史命令" class="headerlink" title="历史命令"></a>历史命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">history</span> [选项]</span><br></pre></td></tr></table></figure><p>选项：</p><ul><li>-c ： 清空历史命令</li><li>-w ： 把缓存中的历史命令写入历史命令保存文件<code>~/.bash_history</code><br>注意： history 命令是历史命令和本次登录命令。.bash_history文件则为正常注销退出之后，存入的历史命令。<br>-w  是手动把临时历史写入 .bash_history<br>历史命令默认会保存1000条，可以在环境变量配置文件/etc/profile中进行修改 HISTSIZE=1000</li></ul><h3 id="历史命令的调用"><a href="#历史命令的调用" class="headerlink" title="历史命令的调用"></a>历史命令的调用</h3><ul><li>使用上下箭头调用以前的历史命令</li><li>使用<code>!n</code> 重复执行第n条历史命令</li><li>使用<code>!!</code> 重复执行上一条命令</li><li>使用<code>!字符串</code>  重复执行最后一条以该字符串开头的命令</li></ul><h3 id="输出重定向"><a href="#输出重定向" class="headerlink" title="输出重定向"></a>输出重定向</h3><p><img src="http://ww3.sinaimg.cn/large/006tNc79ly1fd7fpx9sx6j30xg0e7acw.jpg" alt=""></p><h3 id="多命令顺序执行"><a href="#多命令顺序执行" class="headerlink" title="多命令顺序执行"></a>多命令顺序执行</h3><p><img src="http://ww2.sinaimg.cn/large/006tNc79ly1fd7fx4adx7j30ml089mye.jpg" alt=""></p><h3 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[命令1] | [命令2]</span><br><span class="line"> <span class="comment">#命令1的正确输出作为命令2的操作对象</span></span><br></pre></td></tr></table></figure><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1fd7gto0gjkj30wi0ckdik.jpg" alt=""></p><h3 id="shell中特殊符号"><a href="#shell中特殊符号" class="headerlink" title="shell中特殊符号"></a>shell中特殊符号</h3><p><img src="http://ww2.sinaimg.cn/large/006tNc79gy1fd7h458m6rj30q409wacv.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Shell概述&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Shell 是一个用C语言编写的程序，它是用户使用Linux的桥梁。Shell既是一种命令语言，又是一种程序设计语言。&lt;br&gt;Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Linux学习笔记-基础与命令</title>
    <link href="http://yoursite.com/2017/02/28/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/02/28/Linux学习笔记-基础与命令/</id>
    <published>2017-02-28T09:17:41.000Z</published>
    <updated>2019-10-28T07:28:35.643Z</updated>
    
    <content type="html"><![CDATA[<h2 id="密码原则"><a href="#密码原则" class="headerlink" title="密码原则"></a>密码原则</h2><ul><li>复杂性：1.  八位字符以上、大小写字母、数字、符号  2 不能是英文单词 3 不能是和用户相关的内容</li><li>易记忆性</li><li>时效性</li></ul><h2 id="Centos6-3软件包选择"><a href="#Centos6-3软件包选择" class="headerlink" title="Centos6.3软件包选择"></a>Centos6.3软件包选择</h2><ul><li>Desktop（桌面）</li><li>Minimal Desktop （最小化桌面）</li><li>Minimal（最小化）</li><li>Basic Server （基本服务器）</li><li>Database Server （数据库服务器）</li><li>Web Server （网页服务器）</li><li>Virtual Host （虚拟主机）</li><li>software development workstation  （软件开发工作站）</li></ul><h2 id="安装日志"><a href="#安装日志" class="headerlink" title="安装日志"></a>安装日志</h2><ul><li>/root/install.log： 存储了安装在系统中的软件包及其版本信息</li><li>/root/install.log.syslog: 存储了安装过程中留下的事件记录</li><li>/root/anaconda-ks.cfg:  以Kickstart配置文件的格式记录安装过程中设置的选项信息</li></ul><p>注意：/root/anaconda-ks.cfg 可用于网络批量安装</p><h3 id="Linux安装时至少划分哪两个分区才能正常安装使用？"><a href="#Linux安装时至少划分哪两个分区才能正常安装使用？" class="headerlink" title="Linux安装时至少划分哪两个分区才能正常安装使用？"></a>Linux安装时至少划分哪两个分区才能正常安装使用？</h3><p>Linux安装时至少划分根分区/和SWAP两个分区才能正常安装使用。</p><h1 id="Linux命令基本格式及文件处理命令"><a href="#Linux命令基本格式及文件处理命令" class="headerlink" title="Linux命令基本格式及文件处理命令"></a>Linux命令基本格式及文件处理命令</h1><h2 id="Linux命令格式"><a href="#Linux命令格式" class="headerlink" title="Linux命令格式"></a>Linux命令格式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu-512mb-nyc1-01:~<span class="comment">#</span></span><br></pre></td></tr></table></figure><ul><li><code>root</code>   当前用户</li><li><code>ubuntu-512mb-nyc1-01</code>  登录主机名</li><li><code>~</code>   当前目录位置</li><li><code>#</code>   当前用户身份为超级管理员 （如果是普通用户，应该为 $）</li></ul><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令 [选项] [参数]</span><br></pre></td></tr></table></figure><ul><li>[] 内可选</li><li>可以用简写 <code>-a</code> 等同 <code>--all</code></li></ul><h3 id="查询目录中内容：ls"><a href="#查询目录中内容：ls" class="headerlink" title="查询目录中内容：ls"></a>查询目录中内容：ls</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls [选项] [文件或者目录]</span><br></pre></td></tr></table></figure><p><strong>选项：</strong></p><ul><li>-a 显示所有文件，包含隐藏文件</li><li>-l 显示详细信息</li><li>-d 查看目录属性</li><li>-h 人性化显示文件大小</li><li>-i 显示inode 每个文件都会有个id号，查找文件的时候，都是根据这个id号来查找</li></ul><p>在Linux中，.开头的文件一般为隐藏文件，隐藏文件设计初衷是告诉用户，这个是系统文件或者配置文件，不希望用户频繁操作，避免误操作。</p><h2 id="Linux目录处理命令"><a href="#Linux目录处理命令" class="headerlink" title="Linux目录处理命令"></a>Linux目录处理命令</h2><h3 id="建立目录：mkdir"><a href="#建立目录：mkdir" class="headerlink" title="建立目录：mkdir"></a>建立目录：mkdir</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir [-p] [目录名]</span><br></pre></td></tr></table></figure><p>命令英文原意：make  directories<br><code>-p</code> :  递归创建</p><h3 id="切换所在目录：cd"><a href="#切换所在目录：cd" class="headerlink" title="切换所在目录：cd"></a>切换所在目录：cd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> [选项] [目录名]</span><br></pre></td></tr></table></figure><p>命令英文原意：change  directory<br>cd 的简化操作<br><code>cd  ~</code>  进入当前用户的目录 可以用直接用 <code>cd</code><br><code>cd -</code>  进入上次目录<br><code>cd ..</code>  进入上一级目录<br><code>cd .</code>  进入当前目录</p><h3 id="删除空目录：rmdir"><a href="#删除空目录：rmdir" class="headerlink" title="删除空目录：rmdir"></a>删除空目录：rmdir</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmdir [目录名]</span><br></pre></td></tr></table></figure><p>命令英文原意：remove empty directories<br>只能删除空文件，实际使用场景比较少</p><h3 id="删除文件或目录：rm"><a href="#删除文件或目录：rm" class="headerlink" title="删除文件或目录：rm"></a>删除文件或目录：rm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm [选项] [文件或者目录]</span><br></pre></td></tr></table></figure><p>命令英文原意：remove<br>选项：<br><code>-r</code>   删除目录<br><code>-f</code>   强制</p><h3 id="复制命令：cp"><a href="#复制命令：cp" class="headerlink" title="复制命令：cp"></a>复制命令：cp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm [选项] [原文件或者目录] [目标目录]</span><br></pre></td></tr></table></figure><p>命令英文原意：copy<br>选项：<br><code>-r</code>   复制目录<br><code>-p</code>   连带文件属性复制<br><code>-d</code>   若原文件是链接文件，则复制链接属性<br><code>-a</code>   相当于 -pdr   </p><h3 id="剪切或者改名命令：mv"><a href="#剪切或者改名命令：mv" class="headerlink" title="剪切或者改名命令：mv"></a>剪切或者改名命令：mv</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv [原文件或者目录] [目标目录]</span><br></pre></td></tr></table></figure><p>命令英文原意：move<br>注意，目标目录和原文件同目录那么 mv 变成了重命名命令</p><h3 id="链接命令-：ln"><a href="#链接命令-：ln" class="headerlink" title="链接命令 ：ln"></a>链接命令 ：ln</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln [-s] [原文件] [目标目录]</span><br></pre></td></tr></table></figure><p>命令英文原意: link<br>功能描述：生成链接文件<br>-s  创建软连接</p><h3 id="Linux中常见目录作用"><a href="#Linux中常见目录作用" class="headerlink" title="Linux中常见目录作用"></a>Linux中常见目录作用</h3><ul><li>/ 根目录</li><li>/bin 命令保存目录（普通用户可以读取的命令）</li><li>/boot 启动目录。启动相关文件</li><li>/dev 设备文件保存目录</li><li>/etc 配置文件保存目录</li><li>/home 普通用户目录</li><li>/lib 系统库保存目录</li><li>/mnt 系统挂载目录</li><li>/media 挂载目录</li><li>/root  超级用户目录</li><li>/tmp 临时目录</li><li>/sbin 命令保存目录</li><li>/proc 直接写入内存</li><li>/sys  </li><li>/usr 系统软件资源目录</li><li>/usr/bin/ 系统命令（普通用户）</li><li>/usr/sbin/系统命令（超级用户）</li><li>/var 系统相关文档内容</li></ul><h2 id="文件搜索命令"><a href="#文件搜索命令" class="headerlink" title="文件搜索命令"></a>文件搜索命令</h2><h3 id="文件搜索命令locate"><a href="#文件搜索命令locate" class="headerlink" title="文件搜索命令locate"></a>文件搜索命令locate</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locate [原文件名]</span><br></pre></td></tr></table></figure><p>locate 搜索的是 <code>/var/lib/mlocate</code> 这个数据库<br>这个数据库每天更新一次，所以新建的文件 locate 命令搜索不到<br>手动更新数据库命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatedb</span><br></pre></td></tr></table></figure><p>locate 命令 配置文件为 <code>/etc/updatedb.conf</code><br><code>updatedb.conf</code>简要说明：</p><ul><li>PRUNE_BIND_MOUNTS=”yes”   是否开启搜索限制</li><li>PRUNENAMES=”.git .bzr .hg .svn”  搜索时，不搜索的文件类型</li><li>PRUNEPATHS=“[目录]”  搜索时，不搜索的路径</li><li>PRUNEFS=“[文件系统]” 搜索时，不搜索的文件系统</li></ul><h3 id="locate-命令的特点"><a href="#locate-命令的特点" class="headerlink" title="locate 命令的特点"></a>locate 命令的特点</h3><ul><li>只能搜索文件名</li><li>搜索速度快</li></ul><h3 id="搜索命令的命令：whereis"><a href="#搜索命令的命令：whereis" class="headerlink" title="搜索命令的命令：whereis"></a>搜索命令的命令：whereis</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis [选项] [系统命令名]</span><br></pre></td></tr></table></figure><p>whereis 搜索命令所在路径以及帮助文档所在位置<br>选项：</p><ul><li>-b 只查找可执行文件</li><li>-m 只查找帮助文件</li></ul><h3 id="搜索命令的命令：which"><a href="#搜索命令的命令：which" class="headerlink" title="搜索命令的命令：which"></a>搜索命令的命令：which</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> [系统命令名]</span><br></pre></td></tr></table></figure><p>which 搜索命令所在的路径以及别名</p><h3 id="PATH环境变量"><a href="#PATH环境变量" class="headerlink" title="PATH环境变量"></a>PATH环境变量</h3><p>PATH环境变量：定义的是系统搜索命令的路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu-512mb-nyc1-01:~<span class="comment"># echo $PATH</span></span><br><span class="line">/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/<span class="built_in">local</span>/games:/snap/bin</span><br></pre></td></tr></table></figure><h3 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find [搜索范围] [搜索条件]</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>避免大范围搜索，会非常耗费系统资源</li><li>find是在系统当中搜索符合条件的文件名。如果需要匹配，使用通配符匹配，通配符是完全匹配</li></ul><h4 id="Linux中的通配符"><a href="#Linux中的通配符" class="headerlink" title="Linux中的通配符"></a>Linux中的通配符</h4><ul><li><ul><li>匹配任意内容</li></ul></li><li>？匹配人意一个字符</li><li>[] 匹配任意一个中括号内的字符</li></ul><h4 id="find：按照文件大小搜索"><a href="#find：按照文件大小搜索" class="headerlink" title="find：按照文件大小搜索"></a>find：按照文件大小搜索</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find [搜索范围] -size [文件大小]</span><br></pre></td></tr></table></figure><p>注意：<br>[文件大小] 参数 大于25k  +25k   小于25k  -25k  等于25k 25k<br>注意千字节小写k，兆字节大写M（+25M）<br>[文件大小]  默认单位为数据块 ，即一个扇区 为125k</p><h4 id="find：按照i节点查找"><a href="#find：按照i节点查找" class="headerlink" title="find：按照i节点查找"></a>find：按照i节点查找</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find [搜索范围] -inum [i 节点]</span><br></pre></td></tr></table></figure><p>按照Linux 节点搜索文件</p><h4 id="复合逻辑搜索："><a href="#复合逻辑搜索：" class="headerlink" title="复合逻辑搜索："></a>复合逻辑搜索：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find [搜索范围] -size +20k -a -size -50k</span><br></pre></td></tr></table></figure><p>查找[搜索范围]目录下，大于20k且小于50k的文件<br>-a  and 逻辑与，两个条件都满足<br>-o or     逻辑或，两个条件满足一个即可</p><h4 id="用-exec-处理find-结果"><a href="#用-exec-处理find-结果" class="headerlink" title="用 -exec 处理find 结果"></a>用 -exec 处理find 结果</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find [搜索范围] -size +20k -a -size -50k -<span class="built_in">exec</span> ls -lh &#123;&#125; \;</span><br></pre></td></tr></table></figure><p><code>{} \;</code>   为标准格式，只要出现 <code>-exec</code> 就要出现 <code>{} \;</code><br>这句的意思为 把find 出的结果，交给 ls -lh 处理</p><h3 id="grep-命令"><a href="#grep-命令" class="headerlink" title="grep: 命令"></a>grep: 命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [选项] 字符串 文件名</span><br></pre></td></tr></table></figure><p>在文件当中匹配复合条件的字符串<br>选项：</p><ul><li>-i 忽略大小写</li><li>-v 排除指定字符串<br>grep命令：在文件当中搜索符合条件的字符串，如果需要匹配，使用正则表达式进行匹配，正则表达式时包含匹配</li></ul><h2 id="帮助命令-man"><a href="#帮助命令-man" class="headerlink" title="帮助命令 man"></a>帮助命令 man</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man [命令]</span><br></pre></td></tr></table></figure><p>man命令简明说明：</p><ul><li>NAME ： 命令的名称，和对命令的简介</li><li>SYNOPSIS：概要 简单命令使用格式</li><li>DESCRIPTION：详细命令选项参数的介绍<br>DESCRIPTION 一般比较长，可以用 <code>/</code>  查找（类似vim） <code>n</code> 向下查找，<code>shift</code> 向上查找</li></ul><h3 id="man-的级别"><a href="#man-的级别" class="headerlink" title="man 的级别"></a>man 的级别</h3><p>Linux man 命令是有级别的，查看帮助等级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man -f [命令]</span><br></pre></td></tr></table></figure><p>级别说明：</p><ol><li>查看命令的帮助</li><li>查看可被内核调用的函数帮助</li><li>查看函数和函数库的帮助</li><li>查看特殊文件的帮助（主要是/dev 目录下的文件）</li><li>查看配置文件的帮助</li><li>查看游戏的帮助</li><li>查看其他杂项的帮助</li><li>查看系统管理员可用命令的帮助</li><li>查看和内核相关文件的帮助</li></ol><p>说明：</p><ul><li>默认查看最低级别</li><li>查看对应级别命令 man [-级别] [命令] </li></ul><h3 id="查看和命令相关的所有帮助"><a href="#查看和命令相关的所有帮助" class="headerlink" title="查看和命令相关的所有帮助"></a>查看和命令相关的所有帮助</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man -k [命令]</span><br></pre></td></tr></table></figure><p>这条命令等同与 apropos</p><h3 id="选项帮助"><a href="#选项帮助" class="headerlink" title="选项帮助"></a>选项帮助</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[命令] --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><h3 id="详细命令帮助info"><a href="#详细命令帮助info" class="headerlink" title="详细命令帮助info"></a>详细命令帮助info</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info [命令]</span><br></pre></td></tr></table></figure><p>info是Linux下的一个巨大的说明文档，info 相当于检索到[命令]<br>操作说明（按键）：</p><ul><li>enter：进入子帮助页面（带有*号标记）</li><li>u：       进入上层页面</li><li>n：       进入下一个小结的帮助</li><li>p：       进入上一个小结的帮助</li><li>q：       推出</li></ul><h2 id="Linux-压缩命令"><a href="#Linux-压缩命令" class="headerlink" title="Linux 压缩命令"></a>Linux 压缩命令</h2><p>常用的压缩格式</p><ul><li>.zip .gz  .bz2</li><li>.tar.gz  .tar.bz2</li></ul><h3 id="zip格式的压缩"><a href="#zip格式的压缩" class="headerlink" title=".zip格式的压缩"></a>.zip格式的压缩</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zip [压缩文件名] [源文件]</span><br><span class="line">zip -r [压缩文件名] [源目录]</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>要先写压缩文件名</li><li>压缩文件名是可以不加.zip 后缀名 Linux是不识别后缀名的，都是文件名。但是为了区分，约定俗成都会给压缩文件加上后缀名，为了日后方便维护</li></ul><h3 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip [压缩文件]</span><br></pre></td></tr></table></figure><h3 id="gz格式压缩"><a href="#gz格式压缩" class="headerlink" title=".gz格式压缩"></a>.gz格式压缩</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gzip [源文件]</span><br><span class="line"><span class="comment">#压缩为.gz格式的压缩文件，源文件会消失 </span></span><br><span class="line">gzip -r [源文件] &gt; [压缩文件]</span><br><span class="line"><span class="comment">#压缩为.gz格式的压缩文件，源文件会保留</span></span><br><span class="line">gzip -r [目录]</span><br><span class="line"><span class="comment">#压缩目录下所有的子文件，但是不能压缩目录</span></span><br><span class="line">gzip -d [压缩文件]</span><br><span class="line"><span class="comment">#解压缩文件</span></span><br><span class="line">gunzip [压缩文件]</span><br><span class="line"><span class="comment">#解压缩文件</span></span><br></pre></td></tr></table></figure><h3 id="bz2格式压缩"><a href="#bz2格式压缩" class="headerlink" title=".bz2格式压缩"></a>.bz2格式压缩</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bzip2 [源文件]</span><br><span class="line"><span class="comment">#压缩为.bz2格式的压缩文件，源文件会消失 </span></span><br><span class="line">bzip2 -k [源文件]</span><br><span class="line"><span class="comment">#压缩为.bz2格式的压缩文件，源文件会保留</span></span><br></pre></td></tr></table></figure><p>注意：bzip2命令不能压缩目录</p><h2 id="关机和重启"><a href="#关机和重启" class="headerlink" title="关机和重启"></a>关机和重启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown [选项] 时间</span><br></pre></td></tr></table></figure><p><strong>选项：</strong></p><ul><li>-c: 取消前一个关机命令</li><li>-h: 关机</li><li>-r:  重启<br>注意不要把服务器关机，虽然服务商和硬件有远程关机命令但是依然不建议服务器关机，个人电脑可以。服务器重启就可以了。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;密码原则&quot;&gt;&lt;a href=&quot;#密码原则&quot; class=&quot;headerlink&quot; title=&quot;密码原则&quot;&gt;&lt;/a&gt;密码原则&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;复杂性：1.  八位字符以上、大小写字母、数字、符号  2 不能是英文单词 3 不能是和用户相关的内容&lt;/li&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title> 读《别处生活》</title>
    <link href="http://yoursite.com/2017/02/17/%E8%AF%BB%E3%80%8A%E5%88%AB%E5%A4%84%E7%94%9F%E6%B4%BB%E3%80%8B/"/>
    <id>http://yoursite.com/2017/02/17/读《别处生活》/</id>
    <published>2017-02-17T15:01:43.000Z</published>
    <updated>2019-10-28T07:28:35.646Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/006tKfTcgy1fcsq696nh4j305h07saai.jpg" alt=""><br><a href="https://book.douban.com/subject/10588835/" target="_blank" rel="noopener">别处生活</a></p><p>读这本书的时候，心中莫名的压抑。这本书的作者是晏礼中《生活》月刊资深记者，记者的职业素养决定了：文字中不能夹杂自己的主观情感，更多应该站在客观的立场上描述人物，故事，场景。</p><p>过于真实的东西，总是那么刺骨。春季在老家过年，听到了一些荒诞不经的事情，有个远方亲戚，姑且叫二舅。二舅来家里喝茶，说到儿子年前和他要了5000块钱给小孙子看病。老爷子本来拿这个钱过年的，这样一来，过年买肉，买新衣服的钱都没有了。二舅，过来和我们家诉苦，聊天得知：他儿子是个独子，好吃懒做，年纪轻轻不出去做工只在镇上干点零工，就这样也挑肥拣瘦，一年下来没什么经济收入。家里的经济支撑全靠二舅种蔬菜大棚。蔬菜大棚，好年景能赚7-8w。紧挣不够慢花，二舅年纪也越来越大了，说不好哪天病倒了，治病的钱都没有了。</p><p>这样荒诞的事情在农村还屡见不鲜，最初听这件事，和我读这本书的时候感觉一样压抑。平时在大城市工作生活，以为过上了“公知” “精英”的生活，总是抬头仰望着去生活。但是这个世界就是这么不堪。幸好自己能遇到这样的书，能在自己飘飘然的时候低下“高傲”的头。看看这才是自己真实生活的世界，抬头能仰望天空，低头也得能抚摸大地。这样走的路才踏实。</p><p>回想，整本书写了20个故事，大部分都是无奈，平庸的一生。今年要考虑定居的问题，这本书给我深深的提了个醒。不客气的说，老家的荒诞的事情，和书中提到的很多故事，都源于群体的信息闭塞，群体的文化水平不高。我最初想法是能定居在秦皇岛，风景宜人，生活压力几乎没有。我和爱人收入水平还不错，能过上一个很好的生活。但是我恐惧回去之后免不了的世俗化。</p><p>不想那么尖酸刻薄的承认，这个社会就是很多不公平，不公平的基础设施，不公平的教育水平，不公平的医疗资源，社会公共资源。但这就是事实，读这本书我强烈的感受到了，读书除了能陶冶性情，提高知识储备，能让自己有尊严的活着，但是读书还有个容易被忽略的属性，能让人更看清这个世界，它本来就有它该有的样子，不是想想和烘托出来。</p><p>我曾经想，该如何的活在这个世界上，富有？显赫一方？物欲谁不曾有？为了什么？生带不来，死带不走。想想父辈，我父亲早年在农村做过生意，也走南闯北过，但是和我爷爷比，爷爷的细想和想法还是比父亲更开化，更跟得上潮流，因为爷爷在城市里，每天看电视，看报纸能及时的跟进这个时代的变化。回家能和爷爷聊天的话题就很多，反而和父亲聊的就比较少。</p><p>在这个方便我和爱人达成共识，以后无论生活水平怎么样，能让我们，和我们的孩子有更好的教育和持续的学习。度过《人类简史》能直观的感受到无论社会形态如何变化高级知识分子都能在这个社会上有不错的阶层。知识分子如何定义，而学识又是什么？ 我不知道，但是我知道简单粗暴的方法就是，尽自己所能触及最好的教育和持续学习。能给子女最好的遗产，我相信就是这样了，自己一穷二白的走到今天，如果子女能比自己更优秀，还担心他们什么呢？而自己对孩子最大的责任就是负责他们优秀。</p><p>这是这本书给我带来如上的思考。简单粗糙。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006tKfTcgy1fcsq696nh4j305h07saai.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/10588835/
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>读村上春树《我的职业是小说家》</title>
    <link href="http://yoursite.com/2017/02/10/%E8%AF%BB%E6%9D%91%E4%B8%8A%E6%98%A5%E6%A0%91%E3%80%8A%E6%88%91%E7%9A%84%E8%81%8C%E4%B8%9A%E6%98%AF%E5%B0%8F%E8%AF%B4%E5%AE%B6%E3%80%8B/"/>
    <id>http://yoursite.com/2017/02/10/读村上春树《我的职业是小说家》/</id>
    <published>2017-02-10T13:57:22.000Z</published>
    <updated>2019-10-28T07:28:35.646Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww2.sinaimg.cn/large/006tNbRwgy1fchmp778vvj308f0c6js6.jpg" alt=""><br>豆瓣： <a href="https://book.douban.com/subject/26889236/" target="_blank" rel="noopener">我的职业是小说家 (豆瓣)</a></p><p>年后收心去北京工作，在路上读完这本书。读村上君的书，如沐春风，他的文字有种特别的温柔。和村上君“聊”了三个来小时，如同老者对面而谈，他的“絮絮叨叨”引人入胜。</p><p>关于村上的写作，没有所谓的成功，或者获奖无数，对于他来说不过是35年来坚持做同一件事。我的职业是程序员，村上君的十二章肺腑之言，让我有很多职业自己的反省。</p><p>村上君，提到“epiphany” ，一次看棒球的奇遇经历，让他有了“某一天，什么东西突如其来地闪现在眼前，于是万事为之面目一变”的感觉。引用书评：</p><blockquote><p>透过村上的经历，我更认同了一个道理：支撑着一个人把一件事做好的，并不是瞬间的激情、突生的勇气和咬牙的努力，而是找准最舒适的节奏，然后以恒久的耐心和从容的态度，去一点一滴地稳步向前推进。<br>不忘初心者，岁月终成诗。  </p></blockquote><p>“不忘初心者，岁月终成诗”，多美好的文字，通往梦想的路，孤寂，冰冷，彷徨，几个字能给梦想坚持者内心多大慰藉。</p><p><img src="http://ww2.sinaimg.cn/large/006tNbRwgy1fchn98ha9ij30go08gq3r.jpg" alt=""><br><img src="http://ww4.sinaimg.cn/large/006tNbRwgy1fchn9pst9bj30go08g0tz.jpg" alt=""></p><p>比起小说村上君有着独树一帜的人格魅力，佩服他活得明白，为之“文学奖”的想法赞叹不已，他不是不想获奖是对获奖这件事无所谓。何为无所谓？就是明天以后没有还记得谁的了什么奖，但是好的作品能在百年之后，还被人们津津乐道。</p><p><img src="http://ww3.sinaimg.cn/large/006tNbRwgy1fchn7holuoj30n00zkgoa.jpg" alt=""><br>他定是个有趣的老头，身为程序员的我，应该学习村上君的“不挑食”，知乎上有人也发问：我度过很多书，但是我不记得怎么办？答主曰：你吃过的饭，不也是记不住么？但是精神食粮已经成为自己思想的一部分。村上君的“饥不择食”让大脑去过滤。日常在编程学习中也会挑食，但是人应该去食五谷。多去读读，开拓自己视野。</p><p><img src="http://ww4.sinaimg.cn/large/006tNbRwgy1fchnnev6ofj30n00zkacg.jpg" alt=""><br>送给焦虑的自己：当自己还犹豫学什么？自己信心不足担心技术被淘汰或者跟不上技术发展… 看村上君的文字，坚定自己学习CS基础知识，去学习那些对工作“无用”的技术。其实在考驾照之后自己学习的心态上也有转变：学习其实有趣的经历。胡适曾经也说过：</p><blockquote><p>怕什么真理无穷,进一寸有一寸的欢喜。  </p></blockquote><blockquote><p>我已经六十二岁了，还不知道我究竟学什么。都是东摸摸，西摸摸，也许以后我还要学学水利工程亦未可知。虽则我现在头发都白了，还是无所专长，一无所成。可是我一生很快乐，因为我没有依社会需要的标准去学时髦。我服从了自己的个性，根据个人的兴趣所在去做。到现在虽然一无所成，但是我生活得很快乐  </p></blockquote><p>梁启超家书，写给梁思成：</p><blockquote><p>我是学问趣味方面极多的人，我之所以不能专积有成者在此，然而我的生活内容，异常丰富，能够永久保持不厌不倦的精神，亦未始不在此。我每历若干时候，趣味转过新方面，便觉得像换个新生命，如朝旭升天，如新荷出水，我自觉这种生活是极可爱的，极有价值的。我虽不愿你们学我那泛滥无归的短处，但最少也想你们参采我那烂漫向荣的长处。<br>与君共勉</p></blockquote><p>如村上君所说：凭时间赢来的东西，时间肯定会为之作证。<br>回应上文：不忘初心者，岁月终成诗。</p><p><img src="http://ww1.sinaimg.cn/large/006tNbRwgy1fchovs8kyoj30mi0zk41a.jpg" alt=""><br><img src="http://ww4.sinaimg.cn/large/006tNbRwgy1fchp41h5rnj30my0zk0vn.jpg" alt=""></p><p>最后贴出也是最燃的，送给每个程序吧，为自己的好技术，修炼个好的容器。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/006tNbRwgy1fchmp778vvj308f0c6js6.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;豆瓣： &lt;a href=&quot;https://book.douban.com/subject/26889
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>《鸟哥的私房菜》读书笔记(一)</title>
    <link href="http://yoursite.com/2017/02/10/%E3%80%8A%E9%B8%9F%E5%93%A5%E7%9A%84%E7%A7%81%E6%88%BF%E8%8F%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E4%B8%80/"/>
    <id>http://yoursite.com/2017/02/10/《鸟哥的私房菜》读书笔记-一/</id>
    <published>2017-02-10T13:54:50.000Z</published>
    <updated>2019-10-28T07:28:35.644Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-文件的类型与权限"><a href="#1-文件的类型与权限" class="headerlink" title="1. 文件的类型与权限"></a>1. 文件的类型与权限</h2><p>命令行输入<code>ls -al</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu-512mb-nyc1-01:~# ls -al</span><br><span class="line">total 28</span><br><span class="line">drwx------  4 root root 4096 Feb  9 00:34 .</span><br><span class="line">drwxr-xr-x 23 root root 4096 Feb  9 00:31 ..</span><br><span class="line">-rw-------  1 root root   10 Feb  9 00:34 .bash_history</span><br><span class="line">-rw-r--r--  1 root root 3106 Oct 22  2015 .bashrc</span><br><span class="line">drwx------  2 root root 4096 Feb  9 00:33 .cache</span><br><span class="line">-rw-r--r--  1 root root    0 Feb  9 00:31 .cloud-locale-test.skip</span><br><span class="line">-rw-r--r--  1 root root  148 Aug 17  2015 .profile</span><br><span class="line">drwx------  2 root root 4096 Feb  9 00:31 .ssh</span><br></pre></td></tr></table></figure><p><img src="http://ww3.sinaimg.cn/large/006tNc79gy1fcjxxsb3bij30o704kwfb.jpg" alt=""></p><p><img src="http://ww4.sinaimg.cn/large/006y8lVagy1fcjzdox825j308l04t74m.jpg" alt=""></p><h3 id="第一个字符代表这个文件的类型-如目录、文件或链接文件等等-："><a href="#第一个字符代表这个文件的类型-如目录、文件或链接文件等等-：" class="headerlink" title="第一个字符代表这个文件的类型(如目录、文件或链接文件等等)："></a>第一个字符代表这个文件的类型(如目录、文件或链接文件等等)：</h3><ul><li>当为[ d ]则是目录</li><li>当为[ - ]则是文件</li><li>若是[ l ]则表示为连结档(link file)；</li><li>若是[ b ]则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；</li><li>若是[ c ]则表示为装置文件里面的串行端口设备,例如键盘、鼠标(一次性读取装置)</li></ul><h3 id="接下来的字符中-以三个为一组-且均为「rwx」-的三个参数的组合"><a href="#接下来的字符中-以三个为一组-且均为「rwx」-的三个参数的组合" class="headerlink" title="接下来的字符中,以三个为一组,且均为「rwx」 的三个参数的组合"></a>接下来的字符中,以三个为一组,且均为「rwx」 的三个参数的组合</h3><p> [ r ]代表可读(read)、[ w ]代表可写(write)、[ x ]代表可执行(execute) 要注意的是,这三个权限的位置不会改变,如果没有权限,就会出现减号[ - ]</p><ul><li>第一组为『文件拥有者的权限』</li><li>第二组为『同群组的权限』</li><li>第三组为『其他非本群组的权限』</li></ul><h3 id="以-rw-r-r-为例"><a href="#以-rw-r-r-为例" class="headerlink" title="以-rw-r--r--为例:"></a>以<code>-rw-r--r--</code>为例:</h3><ul><li><code>-</code> 表示是个文件</li><li><code>rw-</code>  当前用户 可读可写不可执行</li><li><code>r--</code>  用户所在用户组 可读 不可写 不可执行</li><li><code>r--</code>  其他用户  可读 不可写 不可执行</li></ul><h2 id="2-如何修改文件的属性和权限"><a href="#2-如何修改文件的属性和权限" class="headerlink" title="2. 如何修改文件的属性和权限"></a>2. 如何修改文件的属性和权限</h2><p><strong>记住三个命令：</strong></p><ol><li><strong>chgrp</strong>：改变用户所在用户组</li><li><strong>chown</strong>:  改变文件所有者</li><li><strong>chmod</strong>： 改变文件的权限</li></ol><h3 id="chgrp-命令"><a href="#chgrp-命令" class="headerlink" title="chgrp 命令"></a>chgrp 命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chgrp [-R] dirname/filename ...</span><br></pre></td></tr></table></figure><p>[-R] : 递归修改，即该目录下所有文件</p><h3 id="chown-命令"><a href="#chown-命令" class="headerlink" title="chown 命令"></a>chown 命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chgrp [-R] 账号名 文件或者目录</span><br><span class="line">chgrp [-R] 账号名:组名 文件或者目录</span><br><span class="line">chgrp [-R] 账号名.组名 文件或者目录</span><br></pre></td></tr></table></figure><p>账号名.组名  如果账号名中有点会造成误判 比如Yun.kou.group  建议用 冒号</p><h3 id="chmod-命令"><a href="#chmod-命令" class="headerlink" title="chmod 命令"></a>chmod 命令</h3><p>Linux中用九位三组来表示文件的权限<br>三组：own ，group， other<br>权限：read， write，execute（rwx）<br>如果没有对应的权限用-代替<br>rwx正好和可以用二进制表示，有权限记1 没有记0<br>-rwxrwxrwx 对应 -[111][111][111]三位转成十进制 为 -777<br>这样就可以用数字来改变文件的权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod [-R] 644 dirname/filename ...</span><br></pre></td></tr></table></figure><p>644 每个数位转成二进制数 110100100 再转成rwx模式，rw-r—r—</p><p><strong>有几个例子加强记忆</strong><br>-rw——- (600) 只有所有者才有读和写的权限<br>-rw-r–r– (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限<br>-rwx—— (700) 只有所有者才有读，写，执行的权限<br>-rwxr-xr-x (755) 只有所有者才有读，写，执行的权限，组群和其他人只有读和执行的权限<br>-rwx–x–x (711) 只有所有者才有读，写，执行的权限，组群和其他人只有执行的权限<br>-rw-rw-rw- (666) 每个人都有读写的权限<br>-rwxrwxrwx (777) 每个人都有读写和执行的权限</p><h3 id="chmod-也可以制定修改"><a href="#chmod-也可以制定修改" class="headerlink" title="chmod 也可以制定修改"></a>chmod 也可以制定修改</h3><p><img src="http://ww1.sinaimg.cn/large/006y8lVagy1fclph7t81vj30jp06twf1.jpg" alt=""></p><p><code>u</code> 代表当前用户<br><code>g</code> 代表所在群组<br><code>o</code> 表示其他用户<br><code>a</code> 表示所有</p><p><code>+</code>  表示增加权限<br><code>-</code>  表示删除权限<br><code>=</code>  表示赋值权限</p><p>具体用法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">chmod [-R] u=rwx,g=rx,o=r dirname/filename ...</span><br><span class="line">ls -al dirname/filename ...</span><br><span class="line">-rwxr-xr--  ...</span><br><span class="line">chmod [-R] a+w dirname/filename ...</span><br><span class="line">-rwxrwxrw- ...</span><br><span class="line">chmod [-R] a-x dirname/filename ...</span><br><span class="line">-rw-rw-rw- ...</span><br></pre></td></tr></table></figure><p><code>=</code>  赋值将影响 rwx 的值 而 <code>-</code>  <code>+</code>  只改变修改值 对其他没有影响</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-文件的类型与权限&quot;&gt;&lt;a href=&quot;#1-文件的类型与权限&quot; class=&quot;headerlink&quot; title=&quot;1. 文件的类型与权限&quot;&gt;&lt;/a&gt;1. 文件的类型与权限&lt;/h2&gt;&lt;p&gt;命令行输入&lt;code&gt;ls -al&lt;/code&gt;&lt;/p&gt;
&lt;figure
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>im项目回顾</title>
    <link href="http://yoursite.com/2017/01/27/im%E9%A1%B9%E7%9B%AE%E5%9B%9E%E9%A1%BE/"/>
    <id>http://yoursite.com/2017/01/27/im项目回顾/</id>
    <published>2017-01-27T14:23:11.000Z</published>
    <updated>2019-10-28T07:28:35.644Z</updated>
    
    <content type="html"><![CDATA[<p>年前有幸和其他几个优秀的同事一起开发完成im项目开发。im项目在公司所有产品线中是功能最少但是细节多开发难度大。一方面来自于产品形态属于富交互，第二点来自优秀作品的比较：比如钉钉，微信，QQ等等。往往一个看似平常的功能，实现起来要多端配合，难度的跨度比较大。</p><p>先看效果： 线上地址 <a href="https://im.clouderwork.com" target="_blank" rel="noopener">https://im.clouderwork.com</a></p><p>im项目虽然历经坎坷，单回头看也很精彩其中有很多可圈可点之处，不方便一一道来，随手拿出几个经典的场景浅析下使用的方案，希望有所交流和帮助</p><h3 id="Contenteditable-Vs-Textarea"><a href="#Contenteditable-Vs-Textarea" class="headerlink" title="Contenteditable Vs Textarea"></a>Contenteditable Vs Textarea</h3><p><img src="https://ww4.sinaimg.cn/large/006y8lValy1fc5ka37xufj30rp0khwfi.jpg" alt=""></p><p>发消息的输入框可以有两种方案：</p><p><strong>方案1:</strong> 使用div contenteditable </p><p><strong>方案2:</strong> 使用textarea</p><p>分析下两种方案的利弊：<strong>方案1</strong>  可以插入任意标签，对于im 多个标签就可以干很多事，比如标记@的信息，展示表情。项目初期我们使用的此方案，美中不足不兼容其他端，也就是前端可以随意展示html 但是安卓端和ios端不能在消息体中带有html标签  <strong>方案2:</strong> 是纯 字符串解决方案，兼容其他端，变成了操作字符串。相应的表情不能展示成图片，只能<code>[开心]</code>这样展示。几经沟通最后确定还是采用了方案2</p><p>下面分享下方案2的难点</p><p>如果是方案1 我们可以@人的时候 加入一个<code>span</code> 标签 <code>&lt;span contenteditable=&quot;false&quot; data-id=&#39;xxxxx&#39;&gt;@路飞&lt;/span&gt;</code> 这样我们解析的时候非常好解析，还有个问题，单我们删除@的人的时候 是整个@路飞一起删除，而不是一个个字删除。</p><p>在纯字符串中去解决这个问题就不好解决了。顺带还有一些其他问题比如：键盘左右键，经过 @路飞的时候要跳过去，不能停留在 @路飞 之间，不能破坏@的结构。 鼠标单击要让光标落在 @路飞 的前面或者后面。</p><p>该功能参照钉钉客户端的实现。</p><p>为了更好的交流，我把代码也开源出来，希望能有更好的解决方案。体验效果：<a href="http://kouyun.me/Vue-textarea/" target="_blank" rel="noopener">http://kouyun.me/Vue-textarea/</a></p><p><a href="https://github.com/Yunkou/Vue-textarea/tree/gh-pages" target="_blank" rel="noopener">https://github.com/Yunkou/Vue-textarea/tree/gh-pages</a> 代码在此</p><p><img src="https://ww1.sinaimg.cn/large/006y8lValy1fc5kuup220j30fv0fyt9f.jpg" alt=""></p><p>说下大概的思路：</p><p>整个操作都是在计算光标和字符串index 的关系。会维护一个数组存储@的信息，记录这个@开始的位置，结束的位置和一些特征信息比如id。</p><p>核心代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> REX = <span class="regexp">/\s@\S+\s/g</span></span><br><span class="line"><span class="keyword">let</span> arr</span><br><span class="line"><span class="keyword">let</span> posArr = []</span><br><span class="line"><span class="keyword">while</span> ((arr = REX.exec(val)) !== <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> pos = &#123;</span><br><span class="line">  start: arr.index,</span><br><span class="line">  end: REX.lastIndex</span><br><span class="line">&#125;</span><br><span class="line">posArr.push(pos)</span><br></pre></td></tr></table></figure><p>利用正则对象exec 方法 不断迭代。找到开始点和结束点。</p><p>单其他相关操作的时候，遍历光标是否在这个区间内，一旦进入这个区间立即给予相应的处理。</p><p>第二个难点textarea 是没法拿到光标的坐标<br>这里比较绕，不是光标的位置 index，而是定位 fixed position 也就是相对页面位置。这个该如何计算，一直是个难点，这个问题用来解决，手动输入@的时候，正确的在光标定位处出现 @的人员列表。光标是无法计算的。后来想了一个代理布局的方式，即在 textarea 下方 用一个pre标签来模拟 textarea 标签布局。当textarea监听到输入@（修饰键50且shift修饰键值为true），在pre光标处（字符串index）插入 空span标签。然后用dom树找到插入的空span标签计算出位置，并映射到textarea正确的位置。</p><p>核心代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!e.shiftKey) &#123; <span class="keyword">return</span> &#125;</span><br><span class="line"><span class="keyword">let</span> index = <span class="built_in">document</span>.querySelector(<span class="string">'textarea'</span>).selectionStart</span><br><span class="line"><span class="keyword">let</span> tmpStr = <span class="keyword">this</span>.textValue</span><br><span class="line"><span class="keyword">let</span> pre = <span class="built_in">document</span>.querySelector(<span class="string">'.textarea'</span>)</span><br><span class="line">pre.innerHTML = tmpStr.substring(<span class="number">0</span>, index) + <span class="string">'&lt;span&gt;&lt;/span&gt;'</span> + tmpStr.substring(index, tmpStr.length)</span><br><span class="line"><span class="keyword">let</span> span = pre.querySelector(<span class="string">'span'</span>)</span><br><span class="line"><span class="keyword">let</span> left = span.offsetLeft - pre.offsetLeft</span><br><span class="line"><span class="keyword">let</span> bottom = <span class="number">150</span> - (span.offsetTop - pre.offsetTop)</span><br><span class="line"><span class="comment">// 小于0时根据滚动高度来计算位置</span></span><br><span class="line"><span class="keyword">if</span> (bottom &lt; <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> scrollHeight = pre.scrollHeight</span><br><span class="line">  bottom = scrollHeight - <span class="number">10</span> - (span.offsetTop - pre.offsetTop)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.atListPos = &#123;</span><br><span class="line">  left: left + <span class="number">10</span> + <span class="string">'px'</span>,</span><br><span class="line">  bottom: bottom + <span class="string">'px'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>im可以说是技术的一个无底洞，处理的技术细节特别多，随着慢慢的打磨越来越喜欢上这个项目，大胆实践，谨慎求证。</p><p>文写于2017除夕夜，祝自己和朋友亲人新年快乐。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;年前有幸和其他几个优秀的同事一起开发完成im项目开发。im项目在公司所有产品线中是功能最少但是细节多开发难度大。一方面来自于产品形态属于富交互，第二点来自优秀作品的比较：比如钉钉，微信，QQ等等。往往一个看似平常的功能，实现起来要多端配合，难度的跨度比较大。&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Algorithm in Javascript Quick Sort</title>
    <link href="http://yoursite.com/2016/12/23/algorithm-in-javascript-quick-sort/"/>
    <id>http://yoursite.com/2016/12/23/algorithm-in-javascript-quick-sort/</id>
    <published>2016-12-23T15:08:34.000Z</published>
    <updated>2019-10-28T07:28:35.644Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww2.sinaimg.cn/large/006tNbRwjw1fas33vep7zj312w0pxjve.jpg" alt=""></p><p>桶排序快但是内存消耗大<br>冒泡排序节省内存但是排序速度慢<br>今天主角是 快速排序，快速排序和前面两种算法比较既不浪费空间又可以快一点排序。快速排序也是使用最广泛的排序算法</p><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><p><a href="http://www.cs.usfca.edu/~galles/visualization/ComparisonSort.html" target="_blank" rel="noopener">Comparison Sorting Visualization</a> 点击链接 点Quick Sort 按钮<br>快排，理解起来比较“麻烦”点, 见图示<br><img src="http://ww2.sinaimg.cn/large/006y8lVagw1fb13gcutbtj30ko0qh77q.jpg" alt=""></p><ol><li>随便找个数作为基数 图为7</li><li>从两边开始找，左边负责找比基数大的数，找到停止，右边找到比基数小的数停止</li><li>把两个找到的数交换位置，重复2 直到左右相遇</li><li>这时候，基数归位，这时候数列分成两个数列，左边比基数小，右边比基数大。</li><li>分别在两个数列重复1-4</li></ol><p>在排序算法中遇到了“二分”这个思想，二分会在以后的学习中遇到。</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quicksort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line"><span class="comment">//if array is empty</span></span><br><span class="line"><span class="keyword">if</span> (arr.length === <span class="number">0</span>) &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> left = [];</span><br><span class="line"><span class="keyword">var</span> right = [];</span><br><span class="line">  <span class="keyword">var</span> pivot = arr[<span class="number">0</span>];</span><br><span class="line">  </span><br><span class="line"><span class="comment">//go through each element in array</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] &lt; pivot) &#123;</span><br><span class="line">      left.push(arr[i]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      right.push(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> quicksort(left).concat(pivot, quicksort(right));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="学习算法中遇到的好玩的东西"><a href="#学习算法中遇到的好玩的东西" class="headerlink" title="学习算法中遇到的好玩的东西"></a>学习算法中遇到的好玩的东西</h2><ol><li>推荐一本书讲算法的生动有趣《 <a href="https://book.douban.com/subject/25894685/" target="_blank" rel="noopener">啊哈!算法</a> 》我开始学习算法就是在这本书开始的，这本书算法的描述是c语言 。如果对c语言有遗忘推荐作者的另一本书《 <a href="https://book.douban.com/subject/25716079/" target="_blank" rel="noopener">啊哈C！思考快你一步</a> 》</li><li><a href="http://jsdo.it/norahiko/oxIy/fullscreen" target="_blank" rel="noopener">又一个排序算法可视化的网站</a></li><li><a href="http://www.ruanyifeng.com/blog/2011/04/quicksort_in_javascript.html" target="_blank" rel="noopener">快速排序（Quicksort）的Javascript实现</a></li><li><a href="https://antjanus.com/blog/web-development-tutorials/understanding-quicksort-js-native-implementation/" target="_blank" rel="noopener">Understanding Quicksort, and taking advantage of JS’s native implementation - AntJanus</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/006tNbRwjw1fas33vep7zj312w0pxjve.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;桶排序快但是内存消耗大&lt;br&gt;冒泡排序节省内存但是排序速度慢&lt;br&gt;今天主角是 快速排序，快
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Algorithm in Javascript Bubble Sort</title>
    <link href="http://yoursite.com/2016/12/16/algorithm-in-javascript-bubble-sort/"/>
    <id>http://yoursite.com/2016/12/16/algorithm-in-javascript-bubble-sort/</id>
    <published>2016-12-15T19:15:46.000Z</published>
    <updated>2019-10-28T07:28:35.644Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/006tNbRwjw1fas0m8g5lvj312w0pxafw.jpg" alt=""></p><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p><strong>理解：</strong><br>冒泡排序算法的流程如下：</p><ol><li>比较相邻的元素。 如果第一个比第二个大，就交换他们两个。</li><li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。 在这一点，最后的元素应该会是最大的数。</li><li>针对所有的元素重复以上的步骤，除了最后一个。</li><li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li></ol><p><strong>核心思想：</strong><br>比较两个相邻位置如果位置错误就交换<br><strong>图解：</strong><br><img src="http://ww1.sinaimg.cn/large/006tNbRwgw1fas2iv4y2qj30rg0dfwgq.jpg" alt=""><br><img src="http://ww2.sinaimg.cn/large/006tNbRwgw1fas0uvzokxg307s06lgo0.gif" alt=""></p><p><a href="http://www.cs.usfca.edu/~galles/visualization/ComparisonSort.html" target="_blank" rel="noopener">Comparison Sorting Visualization</a>点击链接后选择Bubble Sort</p><p><strong>代码实现：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbleSort</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> len = arr.length</span><br><span class="line">  <span class="comment">// 通过交换每次选出最大的放大哦最后，排到第二位时候一次交换完成，</span></span><br><span class="line">  <span class="comment">// 所以排多少次是固定的 len - 1</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="comment">// 每次把最大的数推到最后，最后排序已经固定了，没有必要再排</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= len - i; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[j] &lt; arr[j - <span class="number">1</span>]) &#123;</span><br><span class="line">        [arr[j], arr[j - <span class="number">1</span>]] = [arr[j - <span class="number">1</span>], arr[j]]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(bubbleSort([<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">2</span>]))</span><br></pre></td></tr></table></figure><h2 id="番外篇"><a href="#番外篇" class="headerlink" title="番外篇"></a>番外篇</h2><p>学习算法遇遇到的好的资料<br>一个不错的博客 <a href="http://bubkoo.com/" target="_blank" rel="noopener">http://bubkoo.com/</a><br>算法可视化的网站<a href="http://www.cs.usfca.edu/~galles/visualization/Algorithms.html" target="_blank" rel="noopener">Data Structure Visualization</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006tNbRwjw1fas0m8g5lvj312w0pxafw.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Algorithm in Javascript Bucket Sort</title>
    <link href="http://yoursite.com/2016/12/16/algorithm-in-javascript-bucket-sort/"/>
    <id>http://yoursite.com/2016/12/16/algorithm-in-javascript-bucket-sort/</id>
    <published>2016-12-15T17:43:44.000Z</published>
    <updated>2019-10-28T07:28:35.644Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww2.sinaimg.cn/large/006tNbRwgw1fary7i72nij312w0pxn0c.jpg" alt=""></p><p>我怎么又去研究算法了呢？自己不是根正苗红CS专业，基础差，亡羊补牢，填充数据结构方面的空白，学习过程遇到有趣的算法就记录下来。<br>常见算法，多为 c  c++ python 所描述，为方便，尝试转成日常所用javascript 才疏学浅，如有写的不当之处，不吝赐教。🙏🙏🙏🙏</p><h2 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h2><p><strong>代码实现：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bucketSort</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 假设我们排序的范围为0-10 那么我们准备11个桶来放这些数字</span></span><br><span class="line">  <span class="keyword">let</span> buckets = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">11</span>).fill(<span class="number">0</span>)</span><br><span class="line">  <span class="keyword">let</span> newArr = []</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 装桶</span></span><br><span class="line">  arr.forEach(<span class="function"><span class="params">val</span> =&gt;</span> &#123; buckets[val]++ &#125;)</span><br><span class="line"></span><br><span class="line">  buckets.forEach(<span class="function">(<span class="params">val, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= val; i++) &#123;</span><br><span class="line">      newArr.push(index)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> newArr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(bucketSort([<span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>]))</span><br><span class="line"><span class="built_in">console</span>.log(bucketSort([<span class="number">1</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">2</span>]))</span><br><span class="line"><span class="built_in">console</span>.log(bucketSort([<span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">5</span>]))</span><br></pre></td></tr></table></figure><p><strong>图解：</strong><br><img src="http://ww2.sinaimg.cn/large/006tNbRwjw1farztois5yj30iy0cowfe.jpg" alt=""></p><p><img src="http://ww3.sinaimg.cn/large/006tNbRwjw1farzs9q4mvj30gm05174u.jpg" alt=""></p><p><strong>理解：</strong></p><blockquote><p>桶排序 (Bucket sort)或所谓的箱排序的原理是将数组分到有限数量的桶子里，然后对每个桶子再分别排序（有可能再使用别的排序算法或是以递归方式继续使用桶排序进行排序），最后将各个桶中的数据有序的合并起来。</p></blockquote><ol><li>根据数列最大值设置桶数量</li><li>把数据放到对应的桶里</li><li>循环输出不为空桶里面的数据，计数多少输出多少次</li></ol><p>桶排序动画演示： <a href="http://www.cs.usfca.edu/~galles/visualization/BucketSort.html" target="_blank" rel="noopener">Bucket Sort Visualization</a><br><strong>特点：</strong></p><ol><li>桶排序是稳定的</li><li>桶排序是常见排序里最快的一种,比快排还要快…大多数情况下</li><li>桶排序非常快,但是同时也非常耗空间,基本上是最耗空间的一种排序算法</li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="http://bubkoo.com/2014/01/15/sort-algorithm/bucket-sort/" target="_blank" rel="noopener">常见排序算法 - 桶排序 (Bucket Sort) </a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/006tNbRwgw1fary7i72nij312w0pxn0c.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我怎么又去研究算法了呢？自己不是根正苗红CS专业，基础差，亡羊补牢，填充数据结构方面的空白，
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
